<bugzilla version="5.0.4" urlbase="https://bugzilla.tianocore.org/"
  maintainer="john.mathews@intel.com">
  <bug>
    <bug_id>3295</bug_id>
    <creation_ts>2021-04-02 03:26:01 +0000</creation_ts>
    <short_desc>Promote device security protocol to PI spec</short_desc>
    <delta_ts>2021-04-17 21:17:54 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Normal</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter>jiewen.yao</reporter>
    <assigned_to>jiewen.yao</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cc>samer.el-haj-mahmoud</cc>
    <cf_industrystandardspecifications>UEFI Platform Initialization Specification Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_release_observed>EDK II Master</cf_release_observed>
    <cf_target_os>---</cf_target_os>
    <cf_package>MdePkg</cf_package>
    <cf_releases_to_fix>EDK II Master</cf_releases_to_fix>
    <cf_documents>Other Document</cf_documents>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>15507</commentid>
      <comment_count>0</comment_count>
      <attachid>688</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2021-04-02 03:26:01 +0000</bug_when>
      <thetext>Created attachment 688 CodeFirst - Device Security Protocol Bugzilla
        https://bugzilla.tianocore.org/show_bug.cgi?id=2303 introduces the EDKII_DEVICE_SECURITY
        protocol to measure/authenticate a device. This bugzilla is to promote the
        EDKII_DEVICE_SECURITY protocol to PI specification - EFI_DEVICE_SECURITY protocol. The
        current definition is in
        https://github.com/tianocore/edk2/blob/master/MdeModulePkg/Include/Protocol/DeviceSecurity.h.
        The CodeFirst - Device Security Protocol is attached. Once it is approved, we can move to
        MdePkg.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15509</commentid>
      <comment_count>1</comment_count>
      <who name="">jiewen.yao</who>
      <bug_when>2021-04-02 03:35:32 +0000</bug_when>
      <thetext>related bugzilla: https://bugzilla.tianocore.org/show_bug.cgi?id=2479</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15632</commentid>
      <comment_count>2</comment_count>
      <who name="Samer El-Haj-Mahmoud">samer.el-haj-mahmoud</who>
      <bug_when>2021-04-13 13:20:26 +0000</bug_when>
      <thetext>USB authentication does not use SPDM. SPDM was derived from USB Authentication spec,
        but improvements to SPDM do not exactly map to what's in USB Authentication spec.Is the
        implementation expectation is that for devices of type EFI_DEVICE_IDENTIFIER_TYPE_USB_GUID ,
        the USB Authentication spec is used (rather than the SPDM spec?). If so, shouldn't this be
        explicitly called out in the spec. Similarly, for devices of type
        EFI_DEVICE_IDENTIFIER_TYPE_PCI_GUID, shouldn't there be explicit reference to PCIe CMA spec?</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15640</commentid>
      <comment_count>3</comment_count>
      <who name="">jiewen.yao</who>
      <bug_when>2021-04-13 20:35:22 +0000</bug_when>
      <thetext>Thanks to point out. Yes, good idea to mention USB Authentication spec and PCIe CMA.
        I will update.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15642</commentid>
      <comment_count>4</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2021-04-13 21:45:53 +0000</bug_when>
      <thetext>Based on code first process, Markdown format doc should be provided.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15718</commentid>
      <comment_count>5</comment_count>
      <attachid>701</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2021-04-17 21:17:37 +0000</bug_when>
      <thetext>Created attachment 701 CodeFirst - Device Security Protocol v2 Address feedback from
        ARM</thetext>
    </long_desc>
    <attachment isobsolete="1" ispatch="0" isprivate="0">
      <attachid>688</attachid>
      <date>2021-04-02 03:26:01 +0000</date>
      <delta_ts>2021-04-17 21:17:54 +0000</delta_ts>
      <desc>CodeFirst - Device Security Protocol</desc>
      <filename>CodeFirst - Device Security Protocol.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>28407</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>701</attachid>
      <date>2021-04-17 21:17:37 +0000</date>
      <delta_ts>2021-04-17 21:17:37 +0000</delta_ts>
      <desc>CodeFirst - Device Security Protocol v2</desc>
      <filename>CodeFirst - Device Security Protocol v2.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>28338</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>3430</bug_id>
    <creation_ts>2021-06-02 21:41:04 +0000</creation_ts>
    <short_desc>EFI_MM_COMMUNICATE_HEADER has architecture dependent sized field</short_desc>
    <delta_ts>2022-01-14 15:21:30 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Normal</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter>kun.qin</reporter>
    <assigned_to>kun.qin</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cf_industrystandardspecifications>UEFI Platform Initialization Specification Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>16254</commentid>
      <comment_count>0</comment_count>
      <who name="">kun.qin</who>
      <bug_when>2021-06-02 21:41:04 +0000</bug_when>
      <thetext>In PI Spec v1.7 Errata A, Vol.4, Sec 5.7 MM Communication Protocol, the MessageLength
        field of EFI_MM_COMMUNICATE_HEADER (also defined as EFI_SMM_COMMUNICATE_HEADER) is currently
        defined as type UINTN. But this structure, as a generic definition, could be used for both
        PEI and DXE MM communication. Thus for a system that supports PEI MM launch, but operates
        PEI in 32bit mode and MM foundation in 64bit, the current EFI_MM_COMMUNICATE_HEADER
        definition will cause structure parse error due to UINTN used. The suggested change is to
        make the MessageLength field defined with definitive size as below: ``` typedef struct {
        EFI_GUID HeaderGuid; UINT64 MessageLength; UINT8 Data[ANYSIZE_ARRAY]; }
        EFI_MM_COMMUNICATE_HEADER; ``` This change will impact the structure consumers including:
        MdeModulePkg/Core/PiSmmCore MdeModulePkg/Application/SmiHandlerProfileInfo
        MdeModulePkg/Application/MemoryProfileInfo Note:
        MdeModulePkg/Library/SmmLockBoxLib/SmmLockBoxPeiLib is also consuming this structure, but it
        handled this size discrepancy internally. (Without the spec change in this ticket, all
        applicable PEI MM communicate callers will need to engage the same routine) The reference
        implementation is tracked by ticket: https://bugzilla.tianocore.org/show_bug.cgi?id=3398.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>16307</commentid>
      <comment_count>1</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2021-06-08 21:44:37 +0000</bug_when>
      <thetext>Kun is working on it.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>16325</commentid>
      <comment_count>2</comment_count>
      <who name="">kun.qin</who>
      <bug_when>2021-06-09 21:45:48 +0000</bug_when>
      <thetext>(In reply to gaoliming from comment #1) > Kun is working on it. First round of review
        is sent here: https://edk2.groups.io/g/devel/message/76303. I cannot seem to push
        edk2-staging repo, so this round of code patches are still based off the personal branch on
        github. Please advise if any. Thanks.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>16398</commentid>
      <comment_count>3</comment_count>
      <who name="">kun.qin</who>
      <bug_when>2021-06-18 05:07:16 +0000</bug_when>
      <thetext>v2 patch sent here: https://edk2.groups.io/g/devel/message/76738</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>18142</commentid>
      <comment_count>4</comment_count>
      <who name="">kun.qin</who>
      <bug_when>2022-01-14 15:21:30 +0000</bug_when>
      <thetext>v4 patch sent here to request change of PI spec:
        https://edk2.groups.io/g/devel/message/85308</thetext>
    </long_desc>
  </bug>
  <bug>
    <bug_id>4814</bug_id>
    <creation_ts>2024-07-17 20:32:31 +0000</creation_ts>
    <short_desc>Code First - PI Specification - Add RNG PPI</short_desc>
    <delta_ts>2024-09-04 20:49:38 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Normal</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Michael Kubacki">michael.kubacki</reporter>
    <assigned_to name="Michael Kubacki">michael.kubacki</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cf_industrystandardspecifications>UEFI Platform Initialization Specification Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>23241</commentid>
      <comment_count>0</comment_count>
      <who name="Michael Kubacki">michael.kubacki</who>
      <bug_when>2024-07-17 20:32:31 +0000</bug_when>
      <thetext>The proposed addition to the PI Specification is a Random Number Generator (RNG) PPI
        to provide a standard binary interface for a platform PEIM to provide RNG services to other
        PEIMs. Similar to the RNG Protocol defined in the UEFI 2.10 Specification, the RNG PPI
        returns random numbers and can serve as an entropy source for seeding other cryptographic
        services. The RNG PPI interface is proposed to use the same interface as the protocol for
        API consistency and implementation reuse. Security has evolved in modern firmware
        implementations to necessitate supporting technologies that depend on strong entropy
        sources. More content is expected to be secure at rest, in transit, and in use. In addition,
        random numbers strengthen recent security mitigations being adopted in PEI phase modules
        such as dynamically generated stack cookie values. At the same time, secure software supply
        chain practices are gaining adoption with an emphasis on software inventory management and
        software bill of materials (SBOM) generation. This lends to more binary distribution
        alongside an accompanying SBOM especially for security sensitive components such as the
        platform RNG provider. RNG technologies also vary across architecture, vendor, and computing
        segments. A platform may need to provide RNG services in PEI across binary boundaries and
        that can be accomplished with the RNG PPI. Because this change is introducing an entirely
        new API, there will not be any impact on existing implementations. An instance of the RngLib
        will be provided that instead of statically linking RNG code directly will locate and use
        the RNG PPI. As is always the case for dynamic interfaces like PPIs, platform integrators
        will need to account for dependencies between the PEIM that produces the RNG PPI and the
        PEIMs that consume it.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23242</commentid>
      <comment_count>1</comment_count>
      <who name="Michael Kubacki">michael.kubacki</who>
      <bug_when>2024-07-17 21:23:00 +0000</bug_when>
      <thetext>
        Code first branch is posted in edk-staging:
        https://github.com/tianocore/edk2-staging/tree/BZ4814-AddRngPpi Some small refactoring may
        be made to the PeiRngLib and RngPei implementations, but they are representative of their
        responsibilities. The document with additional details is here:
        https://github.com/tianocore/edk2-staging/blob/BZ4814-AddRngPpi/CodeFirst/BZ4814-SpecChange.md</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23371</commentid>
      <comment_count>2</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2024-09-04 20:49:38 +0000</bug_when>
      <thetext>michael.kubacki@microsoft.com has worked on it.</thetext>
    </long_desc>
  </bug>
  <bug>
    <bug_id>2875</bug_id>
    <creation_ts>2020-08-05 12:53:51 +0000</creation_ts>
    <short_desc>Digest Algorithm update for Authenticated Variables</short_desc>
    <delta_ts>2020-09-01 15:15:45 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Low</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <dependson>2949</dependson>
    <dependson>2950</dependson>
    <everconfirmed>1</everconfirmed>
    <reporter name="Divneil Wadhawan">divneil.r.wadhawan</reporter>
    <assigned_to name="Divneil Wadhawan">divneil.r.wadhawan</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>nobody</cc>
    <cc>vincent.zimmer</cc>
    <cf_industrystandardspecifications>UEFI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <cf_package>SecurityPkg</cf_package>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>13316</commentid>
      <comment_count>0</comment_count>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2020-08-05 12:53:51 +0000</bug_when>
      <thetext>Currently, Authenticated Variables are only supporting Signer digest algorithm of
        SHA-256. The proposal is to allow flexibility to use any digest algorithm greater than
        SHA-256.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>13317</commentid>
      <comment_count>1</comment_count>
      <attachid>536</attachid>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2020-08-05 12:55:36 +0000</bug_when>
      <thetext>Created attachment 536 Digest Algorithm update for Authenticated Variables</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>13374</commentid>
      <comment_count>2</comment_count>
      <who name="nobody">nobody</who>
      <bug_when>2020-08-11 21:45:34 +0000</bug_when>
      <thetext>Suggest the code to be added into edk2-staging first according to code first process.
        Here is code first process https://edk2.groups.io/g/rfc/message/258</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>13442</commentid>
      <comment_count>3</comment_count>
      <who name="nobody">nobody</who>
      <bug_when>2020-08-18 22:02:32 +0000</bug_when>
      <thetext>@Divneil, can you take it?</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>13443</commentid>
      <comment_count>4</comment_count>
      <who name="nobody">nobody</who>
      <bug_when>2020-08-18 22:03:56 +0000</bug_when>
      <thetext>Both BZs are required. One is for spec, another one is for implementation.</thetext>
    </long_desc>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>536</attachid>
      <date>2020-08-05 12:55:36 +0000</date>
      <delta_ts>2020-08-05 12:55:36 +0000</delta_ts>
      <desc>Digest Algorithm update for Authenticated Variables</desc>
      <filename>Authenticated-Variables-Digest-Algorithm-ECR.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>22101</size>
      <attacher name="Divneil Wadhawan">divneil.r.wadhawan</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4802</bug_id>
    <creation_ts>2024-07-01 17:14:27 +0000</creation_ts>
    <short_desc>Arm CPER Processor Error Type values defined incorrectly</short_desc>
    <delta_ts>2024-07-10 20:41:59 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Edhay">edhaya.chandran</reporter>
    <assigned_to name="Edhay">edhaya.chandran</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cc>Jose.Marinho</cc>
    <cc>samer.el-haj-mahmoud</cc>
    <cf_industrystandardspecifications>UEFI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>23167</commentid>
      <comment_count>0</comment_count>
      <attachid>1523</attachid>
      <who name="Edhay">edhaya.chandran</who>
      <bug_when>2024-07-01 17:14:27 +0000</bug_when>
      <thetext>Created attachment 1523 Errata_Arm CPER Processor Error Type values defined
        incorrectly_V1 The bit definitions for the Type field in ARM Processor Error Information
        Structure were newly added and published in the UEFI Specifications version 2.9A. See
        "N.2.4.4.1 ARM Processor Error Information, Table N-17 ARM Processor Error Information
        Structure, UEFI specification version 2.10"
        https://uefi.org/specs/UEFI/2.10/Apx_N_Common_Platform_Error_Record.html#arm-processor-error-information-structure
        However, these values were defined incorrectly against the conventions. This ECR intends to
        correct these values. The values start from 1 instead of 0 Bit 1 - Cache Error Bit 2 - TLB
        Error Bit 3 - Bus Error Bit 4 - Micro-architectural Error All other values are reserved The
        code implementations in Linux and edk2 have already defined them correctly. This ticket is
        to correct the values in the UEFI specification The mantis ticket tracking this change is:
        https://mantis.uefi.org/mantis/view.php?id=2462</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23191</commentid>
      <comment_count>1</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2024-07-10 20:41:59 +0000</bug_when>
      <thetext>Edhay: please work on it.</thetext>
    </long_desc>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1523</attachid>
      <date>2024-07-01 17:14:27 +0000</date>
      <delta_ts>2024-07-01 17:14:27 +0000</delta_ts>
      <desc>Errata_Arm CPER Processor Error Type values defined incorrectly_V1</desc>
      <filename>Errata_Arm CPER Processor Error Type values defined incorrectly_V1.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>52023</size>
      <attacher name="Edhay">edhaya.chandran</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4841</bug_id>
    <creation_ts>2024-09-03 16:43:06 +0000</creation_ts>
    <short_desc>ACPI: Fix the order of column 2 and 3 for bitfields of GTDT</short_desc>
    <delta_ts>2024-09-04 20:35:53 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Edhay">edhaya.chandran</reporter>
    <assigned_to name="Edhay">edhaya.chandran</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cf_industrystandardspecifications>ACPI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>23360</commentid>
      <comment_count>0</comment_count>
      <who name="Edhay">edhaya.chandran</who>
      <bug_when>2024-09-03 16:43:06 +0000</bug_when>
      <thetext>
        The ACPI specification has the following pattern for the columns of the bitfield
        tables: Col 1 | Col 2 | Col 3 | Col 4 "Flag" | "Bit length" | "Bit offset" | "Description"
        The bitfields defined in the GTDT have the following columns: Col 1 | Col 2 | Col 3 | Col 4
        "Flag" | "Bit offset" | "Number of bits" | "Description" The ordering of columns is
        generally irrelevant for human consumption. However, for the ACPIView (ACPI_PARSER) assumes
        that the table is defined as "Bit len" followed by "Bit offset". When copying the table
        definition from the spec it's simpler if the columns are in the order that the tool
        requires. Otherwise, a manual (and error prone) column reordering is required.
        https://github.com/tianocore/edk2/blob/master/ShellPkg/Library/UefiShellAcpiViewCommandLib/AcpiParser.h#L268-L280
        https://github.com/tianocore/edk2/blob/master/ShellPkg/Library/UefiShellAcpiViewCommandLib/Parsers/Gtdt/GtdtParser.c#L90-L114
        This is a simple erratum to correct the order of “Number of bits” (must be the 2nd column)
        and “Bit offset” (must be the 3rd column) in the affected tables Affected tables:
        https://uefi.org/specs/ACPI/6.5/05_ACPI_Software_Programming_Model.html#flag-definitions-secure-el1-timer-non-secure-el1-timer-el2-timer-virtual-el1-timer-and-virtual-el2-timer
        https://uefi.org/specs/ACPI/6.5/05_ACPI_Software_Programming_Model.html#flag-definitions-gt-block-physical-timers-and-virtual-timers
        https://uefi.org/specs/ACPI/6.5/05_ACPI_Software_Programming_Model.html#flag-definitions-common-flags
        https://uefi.org/specs/ACPI/6.5/05_ACPI_Software_Programming_Model.html#flag-definitions-arm-generic-watchdog-timer</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23363</commentid>
      <comment_count>1</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2024-09-04 20:35:53 +0000</bug_when>
      <thetext>edhaya.chandran@arm.com: please work on it.</thetext>
    </long_desc>
  </bug>
  <bug>
    <bug_id>4768</bug_id>
    <creation_ts>2024-04-26 04:36:30 +0000</creation_ts>
    <short_desc>Can't pass context to SMM root handlers</short_desc>
    <delta_ts>2024-05-29 21:05:15 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Grzegorz Trzebiatowski">grzegorz.trzebiatowski</reporter>
    <assigned_to name="Grzegorz Trzebiatowski">grzegorz.trzebiatowski</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cc>vincent.zimmer</cc>
    <cf_industrystandardspecifications>UEFI Platform Initialization Specification Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>22987</commentid>
      <comment_count>0</comment_count>
      <who name="Grzegorz Trzebiatowski">grzegorz.trzebiatowski</who>
      <bug_when>2024-04-26 04:36:30 +0000</bug_when>
      <thetext>A callback function can be registered as SMI Root handler using
        gSmst->SmiHandlerRegister() Description of callback function's prototype says: "Context
        Points to the optional handler context which was specified when the handler was registered."
        But gSmst->SmiHandlerRegister() does not take any Context param, so there's no way to
        provide Context for the callback function. So the specification contradicts itself - on one
        hand callback takes Context, on the other hand it's impossible to provide the Context.
        Relevant passage in specification is here:
        https://uefi.org/specs/PI/1.8/V4_Management_Mode_System_Table.html#mmihandlerregister
        Current implementation of Smi handling in Edk2 indeed confirms this problem: it always
        passes Context=NULL when it calls registered SMI root handlers.
        https://github.com/tianocore/edk2/blob/c0dfe3ec1f364dbdaf6b241e01343e560b21dd03/MdeModulePkg/Core/PiSmmCore/Smi.c#L183
        This is the only function that iterates list of registered root callbacks. It passes its own
        input param Context to callbacks. But SmiManage() is always called with Context==NULL, so
        that's what it passes to callbacks. Pieces of code that call SmiManage() :
        https://github.com/tianocore/edk2/blob/c0dfe3ec1f364dbdaf6b241e01343e560b21dd03/MdeModulePkg/Core/PiSmmCore/PiSmmCore.c#L749
        https://github.com/tianocore/edk2/blob/c0dfe3ec1f364dbdaf6b241e01343e560b21dd03/MdeModulePkg/Core/PiSmmCore/PiSmmCore.c#L769
        https://github.com/tianocore/edk2/blob/c0dfe3ec1f364dbdaf6b241e01343e560b21dd03/UefiCpuPkg/PiSmmCommunication/PiSmmCommunicationSmm.c#L100
        https://github.com/tianocore/edk2/blob/c0dfe3ec1f364dbdaf6b241e01343e560b21dd03/MdeModulePkg/Core/PiSmmCore/PiSmmIpl.c#L595
        There's a real-world use case for Smi root handler contexts: a platform that contains 2
        pieces of hardware that both need root handler. Those handlers are identical except for
        hardware IO addresses, which ideally could be passed through Context.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23075</commentid>
      <comment_count>1</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2024-05-29 21:05:15 +0000</bug_when>
      <thetext>grzegorz.trzebiatowski@intel.com: please discuss the problem with Vincent whether
        need spec change.</thetext>
    </long_desc>
  </bug>
  <bug>
    <bug_id>4626</bug_id>
    <creation_ts>2023-12-18 02:39:31 +0000</creation_ts>
    <short_desc>Incorrect HEST Revision Number for APCI 6.5</short_desc>
    <delta_ts>2024-07-30 02:02:27 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Reference Implementation</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter>hehe.li</reporter>
    <assigned_to>hehe.li</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cf_industrystandardspecifications>ACPI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>22278</commentid>
      <comment_count>0</comment_count>
      <who name="">hehe.li</who>
      <bug_when>2023-12-18 02:39:31 +0000</bug_when>
      <thetext>According to APCI 6.5, the HEST Revision should be 2. But, the code implementation in
        Edk2\MdePkg\Include\IndustryStandard\Acpi65.h is still be 1 which is incorrect: #define
        EFI_ACPI_6_5_HARDWARE_ERROR_SOURCE_TABLE_REVISION 0x01</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22309</commentid>
      <comment_count>1</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2024-01-02 21:50:07 +0000</bug_when>
      <thetext>hehe.li@intel.com: please work on it.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23122</commentid>
      <comment_count>2</comment_count>
      <who name="">hehe.li</who>
      <bug_when>2024-06-15 12:06:01 +0000</bug_when>
      <thetext>pls review it in https://github.com/tianocore/edk2/pull/5780</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23273</commentid>
      <comment_count>3</comment_count>
      <who name="">hehe.li</who>
      <bug_when>2024-07-30 02:02:27 +0000</bug_when>
      <thetext>PR merged.</thetext>
    </long_desc>
  </bug>
  <bug>
    <bug_id>3519</bug_id>
    <creation_ts>2021-08-02 09:25:37 +0000</creation_ts>
    <short_desc>Add Memory Protection proposal - UEFI_MEMORY_ATTRIBUTE protocol</short_desc>
    <delta_ts>2024-07-04 05:03:22 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter>jiewen.yao</reporter>
    <assigned_to>jiewen.yao</assigned_to>
    <cc>CrystalLee</cc>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>felixp</cc>
    <cc>gaoliming</cc>
    <cc>sean.brogan</cc>
    <cc>vincent.zimmer</cc>
    <cf_industrystandardspecifications>UEFI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>16733</commentid>
      <comment_count>0</comment_count>
      <attachid>782</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2021-08-02 09:25:37 +0000</bug_when>
      <thetext>Created attachment 782 CodeFirst - Memory Attribute Protocol Add Memory Protection
        proposal - UEFI_MEMORY_ATTRIBUTE protocol based upon USST discussion. See attachment.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>16737</commentid>
      <comment_count>1</comment_count>
      <who name="Sean Brogan">sean.brogan</who>
      <bug_when>2021-08-02 18:53:49 +0000</bug_when>
      <thetext>curious if you have worked with any boot loader teams that want to add this? I can
        talk to Windows Boot Manager team but am doubtful they need this as they use their own page
        tables.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>16738</commentid>
      <comment_count>2</comment_count>
      <who name="Vincent Zimmer">vincent.zimmer</who>
      <bug_when>2021-08-02 19:18:44 +0000</bug_when>
      <thetext>some of this work was inspired by discussions w/ linux and grub folks
        https://mobile.twitter.com/vathpela/status/1290108913019490305 if dxe maintains code as RO
        and data as non-executable after EndOfDxe, will the windows loader be ok (i.e., if windows
        loader implements its own image load capability by graduating a data buffer to code & it
        won't panic/it'll update the page protections)?</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>16740</commentid>
      <comment_count>3</comment_count>
      <who name="">jiewen.yao</who>
      <bug_when>2021-08-02 21:12:55 +0000</bug_when>
      <thetext>I cannot access the https://mobile.twitter.com/vathpela/status/1290108913019490305.
        Would you please copy/paste the content here?</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>16752</commentid>
      <comment_count>4</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2021-08-03 21:44:16 +0000</bug_when>
      <thetext>Jiewen is working on it.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>17213</commentid>
      <comment_count>5</comment_count>
      <who name="Felix">felixp</who>
      <bug_when>2021-09-08 14:12:25 +0000</bug_when>
      <thetext>I have concerns with the proposed protocol. It can be inadvertently or maliciously
        misused to disable firmware memory protections. I'd like to better understand what are the
        problems we're trying to solve by introducing the protocol.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>17545</commentid>
      <comment_count>6</comment_count>
      <who name="">jiewen.yao</who>
      <bug_when>2021-10-13 22:28:58 +0000</bug_when>
      <thetext>See comment 2. some of this work was inspired by discussions w/ linux and grub folks
        https://mobile.twitter.com/vathpela/status/1290108913019490305 This proposal is also based
        upon the USST discussion. I think we can revisit that in USST.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>17945</commentid>
      <comment_count>7</comment_count>
      <who name="">jiewen.yao</who>
      <bug_when>2021-12-06 23:46:34 +0000</bug_when>
      <thetext>See Linux boot loader reference - https://github.com/vathpela/mallory/tree/nx</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>17976</commentid>
      <comment_count>8</comment_count>
      <who name="">jiewen.yao</who>
      <bug_when>2021-12-12 08:23:54 +0000</bug_when>
      <thetext>Post POC code at https://github.com/jyao1/edk2/tree/mem_attribute_protocol The
        definition is at
        https://github.com/jyao1/edk2/blob/mem_attribute_protocol/MdePkg/Include/Protocol/MemoryAttribute.h
        The POC driver is
        https://github.com/jyao1/edk2/tree/mem_attribute_protocol/UefiCpuPkg/CpuDxe A simple unit
        test driver is
        https://github.com/jyao1/edk2/tree/mem_attribute_protocol/UefiCpuPkg/CpuDxeTest</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>18400</commentid>
      <comment_count>9</comment_count>
      <who name="Sean Brogan">sean.brogan</who>
      <bug_when>2022-02-16 17:33:53 +0000</bug_when>
      <thetext>Just want to update this bugzilla to track some continued work. There is a QEMU q35
        based platform here that is being used to develop changes.
        https://github.com/microsoft/mu_tiano_platforms/tree/feature/202102/efi_memory_attributes
        This contains changes that enables a "dynamic" policy for boot loaders/pre-boot applications
        to opt-in to the newer policies for allocated memory (all set to NX) based on a NX compat
        flag in the DLL characteristics. This branch also contains a number of internal UEFI changes
        needed to improve or fix issues with UEFI loading and page table/memory attribute
        management. More details once complete.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>18590</commentid>
      <comment_count>10</comment_count>
      <who name="Felix">felixp</who>
      <bug_when>2022-03-09 17:03:52 +0000</bug_when>
      <thetext>I suggest to extend Status Code Returned table for the Set and Clear functions with
        EFI_OUT_OF_RESOURCES and EFI_ACCESS_DENIED. Something like this: EFI_OUT_OF_RESOURCES -
        Requested attributes cannot be applied due to luck of system resources EFI_ACCESS_DENIED -
        Attributes for the requested memory region are controlled by system firmware and cannot be
        updated via the protocol Rationale: EFI_OUT_OF_RESOURCES - resource limitations such as not
        enough memory to allocate the page tables EFI_ACCESS_DENIED - if firmware choses, it can
        implement a mechanisms to protect itself from the protocol misuse. For example, it may not
        allow attribute modifications for the regions occupied by the images loaded via LoadImage.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>18591</commentid>
      <comment_count>11</comment_count>
      <who name="Felix">felixp</who>
      <bug_when>2022-03-09 17:13:05 +0000</bug_when>
      <thetext>There will typically be certain alignment requirements for the memory buffer passed
        to the protocol functions. Should they be explicitly described? We should at least state
        that the region address and size must be aligned on the EFI_PAGE_SIZE boundary. Perhaps(an
        open question), we should go even further by adding GetGranularity function to support
        systems with stricter alignment requirements.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>18603</commentid>
      <comment_count>12</comment_count>
      <who name="Sean Brogan">sean.brogan</who>
      <bug_when>2022-03-15 11:14:41 +0000</bug_when>
      <thetext>(In reply to Felix from comment #10) > I suggest to extend Status Code Returned table
        for the Set and Clear > functions with EFI_OUT_OF_RESOURCES and EFI_ACCESS_DENIED. >
        Something like this: > EFI_OUT_OF_RESOURCES - Requested attributes cannot be applied due to
        luck of > system resources > EFI_ACCESS_DENIED - Attributes for the requested memory region
        are > controlled by system firmware and cannot be updated via the protocol > > Rationale: >
        EFI_OUT_OF_RESOURCES - resource limitations such as not enough memory to > allocate the page
        tables > EFI_ACCESS_DENIED - if firmware choses, it can implement a mechanisms to > protect
        itself from the protocol misuse. For example, it may not allow > attribute modifications for
        the regions occupied by the images loaded via > LoadImage. These seem reasonable. In
        practice, if you were running an extremely low resource system you probably would not want
        to publish this protocol since it is optional. Regardless, the status code seem consistent
        and reasonable.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>18631</commentid>
      <comment_count>13</comment_count>
      <attachid>961</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2022-03-16 12:12:59 +0000</bug_when>
      <thetext>Created attachment 961 CodeFirst - Memory Attribute Protocol v2 update based upon
        feedback in bugzilla</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>18633</commentid>
      <comment_count>14</comment_count>
      <who name="">jiewen.yao</who>
      <bug_when>2022-03-16 12:41:06 +0000</bug_when>
      <thetext>Clarify, v2 only adds the EFI_OUT_OF_RESOURCES and EFI_ACCESS_DENIED. The
        GetGranularity function is not added.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23177</commentid>
      <comment_count>15</comment_count>
      <who name="">CrystalLee</who>
      <bug_when>2024-07-04 05:03:22 +0000</bug_when>
      <thetext>EFI memory attribute protocol has been added in EFI Specification Version 2.10, does
        there has any plan to merge the code change in comment 8 to EDKII source? Or are there any
        concerns so won't add this to EDKII?</thetext>
    </long_desc>
    <attachment isobsolete="1" ispatch="0" isprivate="0">
      <attachid>782</attachid>
      <date>2021-08-02 09:25:37 +0000</date>
      <delta_ts>2022-03-16 12:12:59 +0000</delta_ts>
      <desc>CodeFirst - Memory Attribute Protocol</desc>
      <filename>CodeFirst - Memory Attribute Protocol.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>30037</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>961</attachid>
      <date>2022-03-16 12:12:59 +0000</date>
      <delta_ts>2022-03-16 12:12:59 +0000</delta_ts>
      <desc>CodeFirst - Memory Attribute Protocol v2</desc>
      <filename>CodeFirst - Memory Attribute Protocol v2.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>31470</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>3725</bug_id>
    <creation_ts>2021-11-09 01:44:39 +0000</creation_ts>
    <short_desc>UEFI cryptography agile solution - support multiple crypto algorithm (phase II/III)</short_desc>
    <delta_ts>2023-11-22 12:44:28 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter>jiewen.yao</reporter>
    <assigned_to>jiewen.yao</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cc>vincent.zimmer</cc>
    <cc>w.sheng</cc>
    <cf_industrystandardspecifications>UEFI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>17705</commentid>
      <comment_count>0</comment_count>
      <attachid>871</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2021-11-09 01:44:39 +0000</bug_when>
      <thetext>Created attachment 871 CodeFirst - UEFI Crypto Agile - support crypto indication
        variable v1 This is follow-up item (phase II/III) for
        https://bugzilla.tianocore.org/show_bug.cgi?id=3413 (phase I). In phase I, we separate
        crypto algorithm requirement to a standalone section. Now we need consider adding more
        crypto algorithm support. At same time, we need consider the compatibility, such as : 1) Old
        BIOS + New OS 2) New BIOS + Old BIOS. The proposal "CodeFirst - UEFI Crypto Agile - support
        crypto indication variable" is to use a UEFI variable to exchange information between BIOS
        and OS.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>17721</commentid>
      <comment_count>1</comment_count>
      <attachid>876</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2021-11-10 13:13:33 +0000</bug_when>
      <thetext>Created attachment 876 CodeFirst - UEFI Crypto Agile - support crypto indication
        variable v2</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>17723</commentid>
      <comment_count>2</comment_count>
      <attachid>877</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2021-11-10 19:46:53 +0000</bug_when>
      <thetext>Created attachment 877 CodeFirst - UEFI Crypto Agile - support crypto indication
        variable v3</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>17767</commentid>
      <comment_count>3</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2021-11-15 21:30:00 +0000</bug_when>
      <thetext>Jiewen is working on it.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>18003</commentid>
      <comment_count>4</comment_count>
      <attachid>904</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2021-12-15 13:01:50 +0000</bug_when>
      <thetext>Created attachment 904 CodeFirst - UEFI Crypto Agile - support crypto indication
        variable v4 Add one section to talk about downgrade attack + insecure configuration, based
        upon feedback in the meeting.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>18219</commentid>
      <comment_count>5</comment_count>
      <who name="Sheng Wei">w.sheng</who>
      <bug_when>2022-01-28 02:27:59 +0000</bug_when>
      <thetext>The code change is in https://github.com/swei22/edk2/tree/CryptoAgile. It supports
        both RSA-2048 and RSA-3072 signed image.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22182</commentid>
      <comment_count>6</comment_count>
      <who name="Vincent Zimmer">vincent.zimmer</who>
      <bug_when>2023-11-22 12:44:28 +0000</bug_when>
      <thetext>
        this work is now part of UEFI 2.10
        https://uefi.org/specs/UEFI/2.10/32_Secure_Boot_and_Driver_Signing.html?highlight=ecdsa#firmware-os-crypto-algorithm-exchange</thetext>
    </long_desc>
    <attachment isobsolete="1" ispatch="0" isprivate="0">
      <attachid>871</attachid>
      <date>2021-11-09 01:44:39 +0000</date>
      <delta_ts>2021-11-10 13:13:33 +0000</delta_ts>
      <desc>CodeFirst - UEFI Crypto Agile - support crypto indication variable v1</desc>
      <filename>CodeFirst - UEFI Crypto Agile - support crypto indication variable v1.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>28201</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
    <attachment isobsolete="1" ispatch="0" isprivate="0">
      <attachid>876</attachid>
      <date>2021-11-10 13:13:33 +0000</date>
      <delta_ts>2021-11-10 19:46:53 +0000</delta_ts>
      <desc>CodeFirst - UEFI Crypto Agile - support crypto indication variable v2</desc>
      <filename>CodeFirst - UEFI Crypto Agile - support crypto indication variable v2.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>27732</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
    <attachment isobsolete="1" ispatch="0" isprivate="0">
      <attachid>877</attachid>
      <date>2021-11-10 19:46:53 +0000</date>
      <delta_ts>2021-12-15 13:02:27 +0000</delta_ts>
      <desc>CodeFirst - UEFI Crypto Agile - support crypto indication variable v3</desc>
      <filename>CodeFirst - UEFI Crypto Agile - support crypto indication variable v3.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>28300</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>904</attachid>
      <date>2021-12-15 13:01:50 +0000</date>
      <delta_ts>2021-12-15 13:01:50 +0000</delta_ts>
      <desc>CodeFirst - UEFI Crypto Agile - support crypto indication variable v4</desc>
      <filename>CodeFirst - UEFI Crypto Agile - support crypto indication variable v4.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>28832</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>3726</bug_id>
    <creation_ts>2021-11-09 02:41:38 +0000</creation_ts>
    <short_desc>CodeFirst - Forward Control Flow Guard Instruction runtime indicator</short_desc>
    <delta_ts>2021-11-15 21:30:13 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter>jiewen.yao</reporter>
    <assigned_to>jiewen.yao</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cf_industrystandardspecifications>UEFI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>17707</commentid>
      <comment_count>0</comment_count>
      <attachid>872</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2021-11-09 02:41:38 +0000</bug_when>
      <thetext>Created attachment 872 CodeFirst - Forward Control Flow Guard Instruction runtime
        indicator Extend the EFI_MEMORY_ATTRIBUTE_TABLE to report the Forward Control Flow Guide
        instruction enable/disable in runtime code. (Such as X86 CET-IBT or ARM BTI) See attachment
        for detail.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>17720</commentid>
      <comment_count>1</comment_count>
      <attachid>875</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2021-11-10 13:12:41 +0000</bug_when>
      <thetext>Created attachment 875 CodeFirst - Forward Control Flow Guard Instruction runtime
        indicator v2</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>17768</commentid>
      <comment_count>2</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2021-11-15 21:30:13 +0000</bug_when>
      <thetext>Jiewen is working on it.</thetext>
    </long_desc>
    <attachment isobsolete="1" ispatch="0" isprivate="0">
      <attachid>872</attachid>
      <date>2021-11-09 02:41:38 +0000</date>
      <delta_ts>2021-11-10 13:12:41 +0000</delta_ts>
      <desc>CodeFirst - Forward Control Flow Guard Instruction runtime indicator</desc>
      <filename>CodeFirst - Forward Control Flow Guard Instruction runtime indicator.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>23428</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>875</attachid>
      <date>2021-11-10 13:12:41 +0000</date>
      <delta_ts>2021-11-10 13:12:41 +0000</delta_ts>
      <desc>CodeFirst - Forward Control Flow Guard Instruction runtime indicator v2</desc>
      <filename>CodeFirst - Forward Control Flow Guard Instruction runtime indicator v2.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>23539</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4087</bug_id>
    <creation_ts>2022-09-30 03:37:08 +0000</creation_ts>
    <short_desc>UEFI cryptography agile solution - post quantum support</short_desc>
    <delta_ts>2024-08-14 10:38:06 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter>jiewen.yao</reporter>
    <assigned_to>jiewen.yao</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cc>kpanos</cc>
    <cc>saloni.kasbekar</cc>
    <cc>terry.lee</cc>
    <cc>timothy_hoppen</cc>
    <cc>vincent.zimmer</cc>
    <cf_industrystandardspecifications>UEFI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>19677</commentid>
      <comment_count>0</comment_count>
      <who name="">jiewen.yao</who>
      <bug_when>2022-09-30 03:37:08 +0000</bug_when>
      <thetext>In September 2022, NSA announced CNSA 2.0 compliance transition plan in
        https://www.nsa.gov/Press-Room/News-Highlights/Article/Article/3148990/nsa-releases-future-quantum-resistant-qr-algorithm-requirements-for-national-se/.
        We need prepare the post quantum cryptography support in UEFI.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>19678</commentid>
      <comment_count>1</comment_count>
      <attachid>1030</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2022-09-30 03:38:26 +0000</bug_when>
      <thetext>Created attachment 1030 CodeFirst - UEFI Post-Quantum Cryptography Support</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>19685</commentid>
      <comment_count>2</comment_count>
      <who name="">jiewen.yao</who>
      <bug_when>2022-09-30 08:59:39 +0000</bug_when>
      <thetext>The PI PQC support is at https://bugzilla.tianocore.org/show_bug.cgi?id=4089</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>19757</commentid>
      <comment_count>3</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2022-10-11 21:54:25 +0000</bug_when>
      <thetext>Jiewen is working on it.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22155</commentid>
      <comment_count>4</comment_count>
      <attachid>1429</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2023-11-14 00:17:04 +0000</bug_when>
      <thetext>Created attachment 1429 CodeFirst - UEFI Post-Quantum Cryptography Support - v2
        Upload v2, use the official name (ML-DSA) published by NIST
        https://csrc.nist.gov/projects/post-quantum-cryptography.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22161</commentid>
      <comment_count>5</comment_count>
      <who name="Terry Lee">terry.lee</who>
      <bug_when>2023-11-15 13:32:53 +0000</bug_when>
      <thetext>Thank you for updating the document. For the various crypto choices, could
        information be added to show the pros/cons of the choices?</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22358</commentid>
      <comment_count>6</comment_count>
      <who name="Saloni Kasbekar">saloni.kasbekar</who>
      <bug_when>2024-01-12 18:24:01 +0000</bug_when>
      <thetext>USWG is planning a new UEFI Specification release. Is this change ready to be
        intercepted for the next release?</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22604</commentid>
      <comment_count>7</comment_count>
      <who name="Vincent Zimmer">vincent.zimmer</who>
      <bug_when>2024-02-15 13:17:59 +0000</bug_when>
      <thetext>@saloni - per late last year discussion with UEFI security subteam
        https://members.uefi.org/wg/usst/mail/thread/9909, park item until final NIST algorithm list
        released this year. Not sure if this NIST info will arrive in time to catch the next UEFI
        spec release you mention. @terry - for comparison, material like
        https://uefi.org/sites/default/files/resources/Post%20Quantum%20Webinar.pdf provides some
        overview of overhead of the different algos. Is this the type of material you were looking
        for?</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22787</commentid>
      <comment_count>8</comment_count>
      <who name="">kpanos</who>
      <bug_when>2024-03-13 13:49:51 +0000</bug_when>
      <thetext>This comment is from MITRE’s PQCC Standards workstream. We want to stress the
        importance of introducing these algos to UEFI, especially SLH-DSA which is well-trusted and
        its 10-20KB is not prohibitive for most UEFI use-cases. PQCC is a coalition of industry
        members collaborating on various topics of interest regarding the upcoming post-quantum
        algorithm transition. One of these topics is gaps or areas of improvement in cryptographic
        specifications where there is no work taking place to integrate quantum-resistant algorithms
        to them. UEFI is such a specification. There have been some academic papers that investigate
        quantum-resistant signatures for UEFI [1] [2]. Also, Vincent and Jiewen's presentation from
        2021 [3] laid out the landscape for new post-quantum signatures. A PoC implementation
        brought stateful hash-based signatures in UEFI [4]. The UEFI 2.10 Spec [5] introduced more
        crypto agility [6] by removing mandates of specific digest for the image as discussed in an
        old issue [7]. Theoretically, the specification can include any signature today if it was
        defined externally. The IETF is working on bringing stateless hash-based signatures in
        PKCS#7/CMS [8] [9]. So, after the IETF has specified the identifiers for these signatures,
        they could be used in UEFI. The software signing topic is relatively more urgent because
        updating BIOS or firmware is not trivial. And because BIOS or firmware stays in the field
        for a long time, adding quantum-safe signatures is important. Introducing the new signatures
        does not mean removing the classical ones given that an upgrade is not possible. But UEFI /
        PKCS #7 / CMS allows for multiple signatures to exist so that each verifier can verify the
        signature it supports. This approach already was tested in the migration of using SHA-1 to
        SHA-256 in Secure Boot. [1] https://eprint.iacr.org/2021/041.pdf [2]
        https://ieeexplore.ieee.org/document/9116252 [3]
        https://uefi.org/events/impact-post-quantum-cryptography-uefi-bios [4]
        https://github.com/jyao1/CryptoEx [5] https://uefi.org/specs/UEFI/2.10/ [6]
        https://uefi.org/specs/UEFI/2.10/Frontmatter/Revision_History.html?highlight=agile [7]
        https://bugzilla.tianocore.org/show_bug.cgi?id=3413 [8]
        https://www.ietf.org/rfc/rfc8708.html [9]
        https://datatracker.ietf.org/doc/draft-ietf-lamps-cms-sphincs-plus/</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22791</commentid>
      <comment_count>9</comment_count>
      <who name="">jiewen.yao</who>
      <bug_when>2024-03-14 06:16:11 +0000</bug_when>
      <thetext>I am curious on why "... especially SLH-DSA which is well-trusted ...".
        Recommendation from CNSA 2.0 [1] is LMS/XMSS or Dilithium (ML-DSA). Would you please share
        your insight on that? [1]
        https://media.defense.gov/2022/Sep/07/2003071834/-1/-1/0/CSA_CNSA_2.0_ALGORITHMS_.PDF</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22792</commentid>
      <comment_count>10</comment_count>
      <who name="">kpanos</who>
      <bug_when>2024-03-14 09:46:29 +0000</bug_when>
      <thetext>> I am curious on why "... especially SLH-DSA which is well-trusted ...". Hash-based
        signatures are well-trusted primitives. They are the safest post-quantum options. They have
        been around for 40 years and generally the community thinks they are conservatively secure.
        They are the safest options we have. Stateful Hash-Base Signatures (LMX/XMSS) are great but
        they have the state concern. If you reuse a state (meaning a one-time private key) the whole
        structure falls apart and you can forge a signature. As such, Stateful HBS requires careful
        operations at the signer to make sure state is not reused. This is not trivial especially
        for distributed systems. On top of that, NIST SP 800-208 has some stringent requirements
        about how keys are used in LMS/XMSS. For example you can't export a LMS/XMSS private key out
        of an HSM for backup. This is a big operational challenge. Vendors are trying to convince
        NIST to relax these requirements, but that is how the situation is right now. In the next
        couple of months (in their last presentation they said April 10-12, 2024), NIST will have
        published the final Stateless HBS document, SLH-DSA. SLH-DSA does not have the state
        management issues and can be used as-is. The verification is fast. Signing is slower. And
        the size varies ~10-20KB. It is still a conservatively secure scheme. For sizable software
        or firmware, including a signature of 10KB will not make a difference. If the firmware is
        2KB, then maybe adding 10KB signature to it is wasteful. But in most use-cases where
        firmware or software is 100KB or more, an SLH-DSA signature will not be a problem. So, who
        do we need HBS for firmware. Generally, firmware is hard to upgrade in the field. So, if we
        are to deploy a quantum-safe signature scheme in firmware that will live for 15-20 years, it
        ought to be a well-trusted one which will last and is unlikely to ever be broken. SLH-DSA is
        a great candidate. Signers can sign their firmware today with ECDSA or RSA and SLH-DSA.
        Legacy verifiers will only verify ECDSA or RSA. Upgraded verifiers will verify SLH-DSA.
        Backwards compatibility does not break. > Recommendation from CNSA 2.0 [1] is LMS/XMSS or
        Dilithium (ML-DSA). Indeed, NSA came out with LMS/XMSS for software/firmware signing. When
        asked, they explained that that was because LMS/XMSS were the only "finalized" HBS options
        at the time. Personally, I think they rushed it a bit. But they have been asked repeatedly
        and have indicated that CNSA may be updated in the future to include SLH-DSA after it is
        ratified by NIST (in a couple of months that is). Intuitively it makes sense. SLH-DSA is HBS
        without the state management problem and it makes sense for CNSA to include it.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22793</commentid>
      <comment_count>11</comment_count>
      <who name="">jiewen.yao</who>
      <bug_when>2024-03-14 10:24:17 +0000</bug_when>
      <thetext>I fully agree with you that SLH-DSA is good option, as it is selected by NIST. I also
        agree the stateful concern on LMS/XMSS. No doubt on that. I should ask question more
        explicitly: "Why SLH-DSA is more trusted than ML-DSA?"</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22794</commentid>
      <comment_count>12</comment_count>
      <who name="">kpanos</who>
      <bug_when>2024-03-14 10:36:12 +0000</bug_when>
      <thetext>> I should ask question more explicitly: "Why SLH-DSA is more trusted than ML-DSA?"
        Ah, gotcha. ML-DSA is based on module-learning with errors and structured lattices.
        Unstructured lattices and module learning with errors are older primitives that have been
        analyzed. Module learning with errors (ML-KEM/ ML-DSA) adds some structure to the lattice
        and is a newer primitive. That means that the structure in the lattice makes it more
        efficient, but theoretically it could be revealing something to a cryptanalyzer we don't
        know. In other words, theoretically there may be some unknown issue in ML-DSA and ML-KEM.
        There have been some recent papers that claim some reduction in the security of lattices.
        These are sometimes a little theoretical and hard to prove. There are implications in memory
        constraints for these analyses which affect their practicality, so there is no known issue
        with ML-KEM and ML-DSA. But intuitively they are newer schemes and if we had to bet on an
        attack if there was one, it is more likely it would be on ML-DSA than SLH-DSA. Merkle trees
        have been around for 40 years. SLH-DSA is like XMSS Merkle Trees with a FORS tree at the
        bottom. There have been many many analyses of these structures in the literature. So,
        SLH-DSA is so mature that the community trusts there is no unknown issue in it that we are
        not aware of. OK, NIST is standardizing both of them, they is no known issue with them. But
        conservative users would deploy SLH-DSA every time if the size and the signing performance
        was not an issue. Live connections like in TLS cannot afford the SLH-DSA size and signing
        time, but firmware signing can, I am arguing.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22795</commentid>
      <comment_count>13</comment_count>
      <who name="">jiewen.yao</who>
      <bug_when>2024-03-14 10:56:55 +0000</bug_when>
      <thetext>> But conservative users would deploy SLH-DSA every time if the size and the signing
        performance was not an issue. > Live connections like in TLS cannot afford the SLH-DSA size
        and signing time, but firmware signing can, I am arguing. Understood. Thanks for sharing
        your insight. So far, we can add SLH-DSA to the crypto agile list as well, especially when
        CNSA updates the recommendation, or NIST publishes the official specification. We can
        discuss the final solution in USST with BIOS vendor, OS vendor, and PCI Card vendor.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22796</commentid>
      <comment_count>14</comment_count>
      <who name="Vincent Zimmer">vincent.zimmer</who>
      <bug_when>2024-03-14 15:06:13 +0000</bug_when>
      <thetext>great insight on SLH-DSA BTW anyone on this thread have thoughts or insight of the
        actual dates around "...when CNSA updates the recommendation, or NIST publishes the official
        specification" will land?</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22797</commentid>
      <comment_count>15</comment_count>
      <who name="">kpanos</who>
      <bug_when>2024-03-14 15:22:45 +0000</bug_when>
      <thetext>Not sure about CNSA 2.0 potential updates. NIST said in a panel this week that they
        will publish their first PQ standards (ML-KEM, ML-DSA, SLH-DSA) in their 5th PQC conference
        April 10-12. Not sure if they will hold that date, but that is what they said.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22843</commentid>
      <comment_count>16</comment_count>
      <who name="Terry Lee">terry.lee</who>
      <bug_when>2024-04-01 16:39:18 +0000</bug_when>
      <thetext>(In reply to Vincent Zimmer from comment #7) > @terry - for comparison, material like
        > https://uefi.org/sites/default/files/resources/Post%20Quantum%20Webinar.pdf > provides
        some overview of overhead of the different algos. Is this the type > of material you were
        looking for? Sorry for not responding sooner. Thanks for the link to the overview
        presentation. Yes, this is the type of overview I was looking for.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23044</commentid>
      <comment_count>17</comment_count>
      <who name="">jiewen.yao</who>
      <bug_when>2024-05-20 03:33:09 +0000</bug_when>
      <thetext>FYI: CNSA 2.0 FAQ (April 2024) still does NOT list SLH-DSA as approved.
        https://media.defense.gov/2022/Sep/07/2003071836/-1/-1/0/CSI_CNSA_2.0_FAQ_.PDF ============
        Q: Can I use SLH-DSA (aka SPHINCS+) to sign software? A: While SLH-DSA is hash-based, it is
        not part of CNSA and is not approved for any use in NSS ============</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23319</commentid>
      <comment_count>18</comment_count>
      <who name="Vincent Zimmer">vincent.zimmer</who>
      <bug_when>2024-08-14 10:38:06 +0000</bug_when>
      <thetext>
        finalized algorithms
        https://www.federalregister.gov/documents/2024/08/14/2024-17956/announcing-issuance-of-federal-information-processing-standards-fips-fips-203-module-lattice-based</thetext>
    </long_desc>
    <attachment isobsolete="1" ispatch="0" isprivate="0">
      <attachid>1030</attachid>
      <date>2022-09-30 03:38:26 +0000</date>
      <delta_ts>2023-11-14 00:17:04 +0000</delta_ts>
      <desc>CodeFirst - UEFI Post-Quantum Cryptography Support</desc>
      <filename>CodeFirst - UEFI Post-Quantum Cryptography Support.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>48123</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1429</attachid>
      <date>2023-11-14 00:17:04 +0000</date>
      <delta_ts>2023-11-14 00:17:04 +0000</delta_ts>
      <desc>CodeFirst - UEFI Post-Quantum Cryptography Support - v2</desc>
      <filename>CodeFirst - UEFI Post-Quantum Cryptography Support - v2.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>49541</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4088</bug_id>
    <creation_ts>2022-09-30 06:51:01 +0000</creation_ts>
    <short_desc>PI cryptography - add more crypto for signed FV and signed section</short_desc>
    <delta_ts>2022-10-11 21:53:14 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter>jiewen.yao</reporter>
    <assigned_to>jiewen.yao</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cf_industrystandardspecifications>UEFI Platform Initialization Specification Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>19679</commentid>
      <comment_count>0</comment_count>
      <attachid>1031</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2022-09-30 06:51:01 +0000</bug_when>
      <thetext>Created attachment 1031 CodeFirst - PI Crypto Agile - support more crypto algorithm
        UEFI 2.10 specification adds crypto agile to support more crypto algorithm
        (https://bugzilla.tianocore.org/show_bug.cgi?id=3725). PI specification signed FV and signed
        section only supports PKCS7 or RSA2048_SHA256 cert_type. Unlike UEFI, the PI implementation
        did not use the PKCS7 but chose the raw digital signature RSA2048_SHA256, due to size
        constrain in PEI phase. As such, we need extend RSA2048_SHA256 to
        RSA3072/RSA4096/ECDSA_P384, etc.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>19682</commentid>
      <comment_count>1</comment_count>
      <attachid>1032</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2022-09-30 07:56:04 +0000</bug_when>
      <thetext>Created attachment 1032 CodeFirst - PI Crypto Agile - support more crypto algorithm
        v2</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>19686</commentid>
      <comment_count>2</comment_count>
      <who name="">jiewen.yao</who>
      <bug_when>2022-09-30 08:59:59 +0000</bug_when>
      <thetext>The PI PQC support is at https://bugzilla.tianocore.org/show_bug.cgi?id=4089</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>19756</commentid>
      <comment_count>3</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2022-10-11 21:53:14 +0000</bug_when>
      <thetext>Jiewen is working on it.</thetext>
    </long_desc>
    <attachment isobsolete="1" ispatch="0" isprivate="0">
      <attachid>1031</attachid>
      <date>2022-09-30 06:51:01 +0000</date>
      <delta_ts>2022-09-30 07:56:04 +0000</delta_ts>
      <desc>CodeFirst - PI Crypto Agile - support more crypto algorithm</desc>
      <filename>CodeFirst - PI Crypto Agile - support more crypto algorithm.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>35263</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1032</attachid>
      <date>2022-09-30 07:56:04 +0000</date>
      <delta_ts>2022-09-30 07:56:04 +0000</delta_ts>
      <desc>CodeFirst - PI Crypto Agile - support more crypto algorithm v2</desc>
      <filename>CodeFirst - PI Crypto Agile - support more crypto algorithm v2.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>36122</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4089</bug_id>
    <creation_ts>2022-09-30 08:58:54 +0000</creation_ts>
    <short_desc>PI cryptography add post quantum support</short_desc>
    <delta_ts>2024-06-04 17:02:28 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter>jiewen.yao</reporter>
    <assigned_to>jiewen.yao</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cc>kpanos</cc>
    <cc>timothy_hoppen</cc>
    <cf_industrystandardspecifications>UEFI Platform Initialization Specification Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>19684</commentid>
      <comment_count>0</comment_count>
      <attachid>1033</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2022-09-30 08:58:54 +0000</bug_when>
      <thetext>Created attachment 1033 CodeFirst - PI Post-Quantum Cryptography Support This is PI
        version post-quantum support (the UEFI PQC is at
        https://bugzilla.tianocore.org/show_bug.cgi?id=4087) It is based upon PI crypto algorithm
        for signed FV and signed section (https://bugzilla.tianocore.org/show_bug.cgi?id=4088)</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>19758</commentid>
      <comment_count>1</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2022-10-11 21:54:48 +0000</bug_when>
      <thetext>Jiewen is working on it.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22156</commentid>
      <comment_count>2</comment_count>
      <attachid>1430</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2023-11-14 00:33:52 +0000</bug_when>
      <thetext>Created attachment 1430 CodeFirst - PI Post-Quantum Cryptography Support - v2 Upload
        v2, use the official name (ML-DSA) published by NIST
        https://csrc.nist.gov/projects/post-quantum-cryptography.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22788</commentid>
      <comment_count>3</comment_count>
      <who name="">kpanos</who>
      <bug_when>2024-03-13 13:52:35 +0000</bug_when>
      <thetext>I would like to add one more comment from MITRE’s PQCC Standards workstream. We want
        to stress the importance of introducing SLH-DSA and ML-DSA in EDK II, especially SLH-DSA
        which is well-trusted and its 10-20KB is not prohibitive for most UEFI use-cases. PQCC is a
        coalition of industry members collaborating on various topics of interest regarding the
        upcoming post-quantum algorithm transition. One of these topics is gaps or areas of
        improvement in cryptographic specifications where there is no work taking place to integrate
        quantum-resistant algorithms to them. UEFI is such a specification. There have been some
        academic papers that investigate quantum-resistant signatures for UEFI [1] [2]. Also,
        Vincent and Jiewen's presentation from 2021 [3] laid out the landscape for new post-quantum
        signatures. A PoC implementation brought stateful hash-based signatures in UEFI [4]. The
        UEFI 2.10 Spec [5] introduced more crypto agility [6] by removing mandates of specific
        digest for the image as discussed in an old issue [7]. Theoretically, the specification can
        include any signature today if it was defined externally. The IETF is working on bringing
        stateless hash-based signatures in PKCS#7/CMS [8] [9]. So, after the IETF has specified the
        identifiers for these signatures, they could be used in UEFI. The software signing topic is
        relatively more urgent because updating BIOS or firmware is not trivial. And because BIOS or
        firmware stays in the field for a long time, adding quantum-safe signatures is important.
        Introducing the new signatures does not mean removing the classical ones given that an
        upgrade is not possible. But UEFI / PKCS #7 / CMS allows for multiple signatures to exist so
        that each verifier can verify the signature it supports. This approach already was tested in
        the migration of using SHA-1 to SHA-256 in Microsoft Secure Boot. EDK II does not (seem to
        me to) support post-quantum signatures yet. It relies on other libraries to provide the
        cryptographic algorithms. As such EDK II does not yet implement any post-quantum signatures.
        Jiewen’s PR PoC from 2021 [4] showed how to include Stateful Hash-Based Signatures in EDK II
        by leveraging third-party open-source implementations. We would like the new algorithms to
        come to EDK II / Tianocore. Thx [1] https://eprint.iacr.org/2021/041.pdf [2]
        https://ieeexplore.ieee.org/document/9116252 [3]
        https://uefi.org/events/impact-post-quantum-cryptography-uefi-bios [4]
        https://github.com/jyao1/CryptoEx [5] https://uefi.org/specs/UEFI/2.10/ [6]
        https://uefi.org/specs/UEFI/2.10/Frontmatter/Revision_History.html?highlight=agile [7]
        https://bugzilla.tianocore.org/show_bug.cgi?id=3413 [8]
        https://www.ietf.org/rfc/rfc8708.html [9]
        https://datatracker.ietf.org/doc/draft-ietf-lamps-cms-sphincs-plus/</thetext>
    </long_desc>
    <attachment isobsolete="1" ispatch="0" isprivate="0">
      <attachid>1033</attachid>
      <date>2022-09-30 08:58:54 +0000</date>
      <delta_ts>2023-11-14 00:33:52 +0000</delta_ts>
      <desc>CodeFirst - PI Post-Quantum Cryptography Support</desc>
      <filename>CodeFirst - PI Post-Quantum Cryptography Support.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>34875</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1430</attachid>
      <date>2023-11-14 00:33:52 +0000</date>
      <delta_ts>2023-11-14 00:33:52 +0000</delta_ts>
      <desc>CodeFirst - PI Post-Quantum Cryptography Support - v2</desc>
      <filename>CodeFirst - PI Post-Quantum Cryptography Support - v2.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>35170</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4189</bug_id>
    <creation_ts>2022-12-12 00:53:25 +0000</creation_ts>
    <short_desc>CodeFirst - ACPI MADT MPWakeup</short_desc>
    <delta_ts>2023-01-05 09:37:58 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter>jiewen.yao</reporter>
    <assigned_to>jiewen.yao</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cf_industrystandardspecifications>ACPI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>20204</commentid>
      <comment_count>0</comment_count>
      <attachid>1058</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2022-12-12 00:53:25 +0000</bug_when>
      <thetext>Created attachment 1058 CodeFirst - ACPI MADT MPWakeup This proposal adds restriction
        on the MADT multiprocessor wakeup vector location: It must be in “Mailbox ReservedForOS
        region” or “below 1MB memory”. Please refer to the attachment for detail.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>20237</commentid>
      <comment_count>1</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2022-12-20 21:45:31 +0000</bug_when>
      <thetext>jiewen.yao@intel.com is working on it.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>20414</commentid>
      <comment_count>2</comment_count>
      <attachid>1118</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2023-01-03 09:44:39 +0000</bug_when>
      <thetext>Created attachment 1118 CodeFirst - ACPI MADT MPWakeup - v2</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>20422</commentid>
      <comment_count>3</comment_count>
      <attachid>1119</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2023-01-03 20:24:35 +0000</bug_when>
      <thetext>Created attachment 1119 CodeFirst - ACPI MADT MPWakeup - v3</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>20502</commentid>
      <comment_count>4</comment_count>
      <attachid>1131</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2023-01-05 09:37:58 +0000</bug_when>
      <thetext>Created attachment 1131 CodeFirst - ACPI MADT MPWakeup - v4</thetext>
    </long_desc>
    <attachment isobsolete="1" ispatch="0" isprivate="0">
      <attachid>1058</attachid>
      <date>2022-12-12 00:53:25 +0000</date>
      <delta_ts>2023-01-03 09:44:39 +0000</delta_ts>
      <desc>CodeFirst - ACPI MADT MPWakeup</desc>
      <filename>CodeFirst - ACPI MADT MPWakeup.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>73970</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
    <attachment isobsolete="1" ispatch="0" isprivate="0">
      <attachid>1118</attachid>
      <date>2023-01-03 09:44:39 +0000</date>
      <delta_ts>2023-01-03 20:24:35 +0000</delta_ts>
      <desc>CodeFirst - ACPI MADT MPWakeup - v2</desc>
      <filename>CodeFirst - ACPI MADT MPWakeup - v2.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>73989</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
    <attachment isobsolete="1" ispatch="0" isprivate="0">
      <attachid>1119</attachid>
      <date>2023-01-03 20:24:35 +0000</date>
      <delta_ts>2023-01-05 09:37:58 +0000</delta_ts>
      <desc>CodeFirst - ACPI MADT MPWakeup - v3</desc>
      <filename>CodeFirst - ACPI MADT MPWakeup - v3.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>73737</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1131</attachid>
      <date>2023-01-05 09:37:58 +0000</date>
      <delta_ts>2023-01-05 09:37:58 +0000</delta_ts>
      <desc>CodeFirst - ACPI MADT MPWakeup - v4</desc>
      <filename>CodeFirst - ACPI MADT MPWakeup - v4.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>73694</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4738</bug_id>
    <creation_ts>2024-03-26 20:34:41 +0000</creation_ts>
    <short_desc>RISC-V AP-TEE Confidential Computing Extension for UEFI</short_desc>
    <delta_ts>2024-04-24 20:58:35 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter>jiewen.yao</reporter>
    <assigned_to>jiewen.yao</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cf_industrystandardspecifications>UEFI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>22820</commentid>
      <comment_count>0</comment_count>
      <attachid>1484</attachid>
      <who name="">jiewen.yao</who>
      <bug_when>2024-03-26 20:34:41 +0000</bug_when>
      <thetext>Created attachment 1484 CodeFirst.-.Add.RISC-V.CC-EventLog.003 This proposal is to
        add RISC-V AP-TEE Event Log to Chapter 38 Confidential Computing section. The initial work
        is discussed in RISC-V AP-TEE TG, and agreed by the TG Chair. See
        https://github.com/riscv-non-isa/riscv-ap-tee/issues/29 RISC-V AP-TEE specification
        described CC event log in UEFI firmware at
        https://github.com/riscv-non-isa/riscv-ap-tee/blob/main/specification/attestation.adoc. The
        proposal is attached.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22962</commentid>
      <comment_count>1</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2024-04-24 20:58:35 +0000</bug_when>
      <thetext>jiewen.yao@intel.com takes it.</thetext>
    </long_desc>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1484</attachid>
      <date>2024-03-26 20:34:41 +0000</date>
      <delta_ts>2024-03-26 20:34:41 +0000</delta_ts>
      <desc>CodeFirst.-.Add.RISC-V.CC-EventLog.003</desc>
      <filename>CodeFirst.-.Add.RISC-V.CC-EventLog.003.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>25662</size>
      <attacher>jiewen.yao</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4122</bug_id>
    <creation_ts>2022-10-26 12:23:25 +0000</creation_ts>
    <short_desc>Clarify that EFI_MEMORY_WB and _WT shareability attributes on AArch64</short_desc>
    <delta_ts>2022-11-16 06:38:15 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Jose Marinho">Jose.Marinho</reporter>
    <assigned_to name="Jose Marinho">Jose.Marinho</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cc>hnick</cc>
    <cc>samer.el-haj-mahmoud</cc>
    <cf_industrystandardspecifications>UEFI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>19846</commentid>
      <comment_count>0</comment_count>
      <attachid>1042</attachid>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2022-10-26 12:23:25 +0000</bug_when>
      <thetext>Created attachment 1042
        EFI_memory_cacheability_attribute_clarification_for_AArch64_v2 The AArch64 memory
        architecture allows different shareability attributes set in th e MMU page table meppings.
        The UEFI AArch64 binding does not specify the shareability attributes of UEFI Normal memory
        (EFI_MEMORY_WT and _WB). This can lead to coherency issues if the UEFI implementation maps
        pages with different shareability attributes than what the OS assumes. The ECR mandates that
        EFI_MEMORY_WT and EFI_MEMORY_WB imply inner-shareability attributes on AArch64.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>19905</commentid>
      <comment_count>1</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2022-11-01 21:55:08 +0000</bug_when>
      <thetext>please change the doc as markdown format to follow code first process.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>20046</commentid>
      <comment_count>2</comment_count>
      <who name="Nick Hudson">hnick</who>
      <bug_when>2022-11-16 06:38:15 +0000</bug_when>
      <thetext>VMware welcome mandating EFI_MEMORY_{WT,WB} to imply inner-shareablility attributes.</thetext>
    </long_desc>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1042</attachid>
      <date>2022-10-26 12:23:25 +0000</date>
      <delta_ts>2022-10-26 12:23:25 +0000</delta_ts>
      <desc>EFI_memory_cacheability_attribute_clarification_for_AArch64_v2</desc>
      <filename>EFI_memory_cacheability_attribute_clarification_for_AArch64_v2.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>51490</size>
      <attacher name="Jose Marinho">Jose.Marinho</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4435</bug_id>
    <creation_ts>2023-05-02 13:57:33 +0000</creation_ts>
    <short_desc>Mandate the UEFI Arm implementation to allocate pages from the 48-bit address range
      first.</short_desc>
    <delta_ts>2023-05-09 21:56:52 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Jose Marinho">Jose.Marinho</reporter>
    <assigned_to name="Jose Marinho">Jose.Marinho</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cf_industrystandardspecifications>UEFI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>21463</commentid>
      <comment_count>0</comment_count>
      <attachid>1359</attachid>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2023-05-02 13:57:33 +0000</bug_when>
      <thetext>Created attachment 1359 ECR_LPA_LPA2_limit_addresses_to_2_pow_48_v5 The Arm
        architecture supports up-to 52 bits of physical address (FEAT_LPA, FEAT_LPA2), though the
        baseline is 48 bits. Some OSs only support 48 bit addressing by default. To support legacy
        OSs, this ECR mandates the UEFI Arm implementation to allocate pages from the 48-bit address
        range first. Once the 48-bit range is depleted, the UEFI implementation is permitted to
        allocate pages at higher addresses.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>21537</commentid>
      <comment_count>1</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2023-05-09 21:56:52 +0000</bug_when>
      <thetext>Jose Marinho: please work on it.</thetext>
    </long_desc>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1359</attachid>
      <date>2023-05-02 13:57:33 +0000</date>
      <delta_ts>2023-05-02 13:57:33 +0000</delta_ts>
      <desc>ECR_LPA_LPA2_limit_addresses_to_2_pow_48_v5</desc>
      <filename>ECR_LPA_LPA2_limit_addresses_to_2_pow_48_v5.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>47341</size>
      <attacher name="Jose Marinho">Jose.Marinho</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4439</bug_id>
    <creation_ts>2023-05-03 10:39:09 +0000</creation_ts>
    <short_desc>SRAT hot-plug memory clarification</short_desc>
    <delta_ts>2023-05-09 21:53:54 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Jose Marinho">Jose.Marinho</reporter>
    <assigned_to name="Jose Marinho">Jose.Marinho</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cc>leo.duran</cc>
    <cc>samer.el-haj-mahmoud</cc>
    <cc>scolee</cc>
    <cf_industrystandardspecifications>ACPI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>21469</commentid>
      <comment_count>0</comment_count>
      <attachid>1363</attachid>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2023-05-03 10:39:09 +0000</bug_when>
      <thetext>Created attachment 1363 SRAT Hotplug Clarification v.0.1 This is ECR is a follow-up
        to the now approved TianoCore Bugzilla https://bugzilla.tianocore.org/show_bug.cgi?id=4062.
        The intent is to make it evident and clear that hot-pluggable memory ranges that are not
        present at boot-time can still be part of a Proximity Domain.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>21534</commentid>
      <comment_count>1</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2023-05-09 21:53:54 +0000</bug_when>
      <thetext>Jose.Marinho@arm.com: please work on it.</thetext>
    </long_desc>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1363</attachid>
      <date>2023-05-03 10:39:09 +0000</date>
      <delta_ts>2023-05-03 10:39:09 +0000</delta_ts>
      <desc>SRAT Hotplug Clarification v.0.1</desc>
      <filename>ECR_SRAT-Hotplug-Clarify_v.0.1.rtf</filename>
      <type>application/msword</type>
      <size>110433</size>
      <attacher name="Jose Marinho">Jose.Marinho</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4481</bug_id>
    <creation_ts>2023-06-12 10:13:31 +0000</creation_ts>
    <short_desc>_OSC bits for OSPM to declare understanding of the CPU _STA presence and enabled
      bits.</short_desc>
    <delta_ts>2023-07-31 13:12:29 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Jose Marinho">Jose.Marinho</reporter>
    <assigned_to name="Jose Marinho">Jose.Marinho</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cc>Jose.Marinho</cc>
    <cc>samer.el-haj-mahmoud</cc>
    <cf_industrystandardspecifications>ACPI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>21653</commentid>
      <comment_count>0</comment_count>
      <attachid>1374</attachid>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2023-06-12 10:13:31 +0000</bug_when>
      <thetext>Created attachment 1374 ECR_ACPI_OSC_OS_STA_driving_capabilities_v2 On platforms that
        support CPU enabling/disabling and insertion/removal at OS runtime, platform firmware must
        know if OSPM is able to detect and support these CPU status change. This ECR introduces 2
        _OSC bits for OSPM to declare its support for changes of the bit 0 (presence) and bit 1
        (enabled) of the CPU _STA method, at OS runtime.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>21654</commentid>
      <comment_count>1</comment_count>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2023-06-12 10:19:13 +0000</bug_when>
      <thetext>Corresponding ASWG ECR: https://mantis.uefi.org/mantis/view.php?id=2390</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>21658</commentid>
      <comment_count>2</comment_count>
      <attachid>1375</attachid>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2023-06-13 10:46:38 +0000</bug_when>
      <thetext>Created attachment 1375 ECR_ACPI_OSC_OS_STA_driving_capabilities_v3</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>21685</commentid>
      <comment_count>3</comment_count>
      <attachid>1379</attachid>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2023-06-22 13:53:39 +0000</bug_when>
      <thetext>Created attachment 1379 ECR_ACPI_OSC_OS_STA_driving_capabilities_v4</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>21744</commentid>
      <comment_count>4</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2023-07-18 22:38:07 +0000</bug_when>
      <thetext>Jose.Marinho@arm.com is working on it.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>21788</commentid>
      <comment_count>5</comment_count>
      <attachid>1387</attachid>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2023-07-31 13:12:29 +0000</bug_when>
      <thetext>Created attachment 1387 ECR_ACPI_OSC_OS_STA_driving_capabilities_v5 Change the ECR
        scope: clarify that the presence bit in _STA, on Arm, is not allowed to toggle at system
        runtime.</thetext>
    </long_desc>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1374</attachid>
      <date>2023-06-12 10:13:31 +0000</date>
      <delta_ts>2023-06-12 10:13:31 +0000</delta_ts>
      <desc>ECR_ACPI_OSC_OS_STA_driving_capabilities_v2</desc>
      <filename>ECR_ACPI_OSC_OS_STA_driving_capabilities_v2.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>51822</size>
      <attacher name="Jose Marinho">Jose.Marinho</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1375</attachid>
      <date>2023-06-13 10:46:38 +0000</date>
      <delta_ts>2023-06-13 10:46:38 +0000</delta_ts>
      <desc>ECR_ACPI_OSC_OS_STA_driving_capabilities_v3</desc>
      <filename>ECR_ACPI_OSC_OS_STA_driving_capabilities_v3.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>53085</size>
      <attacher name="Jose Marinho">Jose.Marinho</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1379</attachid>
      <date>2023-06-22 13:53:39 +0000</date>
      <delta_ts>2023-06-22 13:53:39 +0000</delta_ts>
      <desc>ECR_ACPI_OSC_OS_STA_driving_capabilities_v4</desc>
      <filename>ECR_ACPI_OSC_OS_STA_driving_capabilities_v4.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>48141</size>
      <attacher name="Jose Marinho">Jose.Marinho</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1387</attachid>
      <date>2023-07-31 13:12:29 +0000</date>
      <delta_ts>2023-07-31 13:12:29 +0000</delta_ts>
      <desc>ECR_ACPI_OSC_OS_STA_driving_capabilities_v5</desc>
      <filename>ECR_ACPI_OSC_OS_STA_driving_capabilities_v5.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>48415</size>
      <attacher name="Jose Marinho">Jose.Marinho</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4498</bug_id>
    <creation_ts>2023-07-11 13:30:49 +0000</creation_ts>
    <short_desc>Arm CPER processor error section, support FEAT_D128</short_desc>
    <delta_ts>2023-07-18 22:21:21 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Jose Marinho">Jose.Marinho</reporter>
    <assigned_to name="Jose Marinho">Jose.Marinho</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cc>Jose.Marinho</cc>
    <cc>samer.el-haj-mahmoud</cc>
    <cf_industrystandardspecifications>UEFI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>21712</commentid>
      <comment_count>0</comment_count>
      <attachid>1381</attachid>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2023-07-11 13:30:49 +0000</bug_when>
      <thetext>Created attachment 1381 ECR_FEAT_D128_CPER_v2 The Arm Architecture supports 128-bit
        translation tables (with feature name FEAT_D128). When that feature is present, the
        translation table base registers (TTBR) are 128-bit wide, and cannot be represented with the
        current system register descriptors (N.32, N.24, N.27). This ECR proposes a new table (type
        9) where the 128-bit TTBR registers are listed.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>21732</commentid>
      <comment_count>1</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2023-07-18 22:21:21 +0000</bug_when>
      <thetext>Jose.Marinho@arm.com: please go ahead.</thetext>
    </long_desc>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1381</attachid>
      <date>2023-07-11 13:30:49 +0000</date>
      <delta_ts>2023-07-11 13:30:49 +0000</delta_ts>
      <desc>ECR_FEAT_D128_CPER_v2</desc>
      <filename>ECR_FEAT_D128_CPER_v2.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>50431</size>
      <attacher name="Jose Marinho">Jose.Marinho</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4549</bug_id>
    <creation_ts>2023-09-07 12:52:34 +0000</creation_ts>
    <short_desc>FPDT Add generic Host firmware and microcontroller boot performance records.</short_desc>
    <delta_ts>2024-03-06 08:26:20 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Jose Marinho">Jose.Marinho</reporter>
    <assigned_to name="Jose Marinho">Jose.Marinho</assigned_to>
    <cc>ankit.sinha</cc>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cc>Jose.Marinho</cc>
    <cc>rgough</cc>
    <cc>samer.el-haj-mahmoud</cc>
    <cc>sean.brogan</cc>
    <cf_industrystandardspecifications>ACPI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>21896</commentid>
      <comment_count>0</comment_count>
      <attachid>1409</attachid>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2023-09-07 12:52:34 +0000</bug_when>
      <thetext>Created attachment 1409 ECR_ACPI_FPDT_Host_fw_and_micros_boot_perf_v1 The FPDT allows
        for the representation of Host FW boot performance figures. The current record set doesn't
        allow finer-grained boot performance representation, of Host FW components, board
        micro-controllers and mem sub-system init, in a standard way. This ECR extends the standard
        record set to add: - generic Host FW component boot performance, - generic board
        microcontroller boot performance, - memory sub-system initialization. Topics to be
        discussed: - For platforms where the memory init is done by a microcontroller (instead of
        the Host) should the memory sub-system init (Table 5.120 in the ECR) have a reference to the
        microcontroller that does the init (Table 5.117 in the ECR)?</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>21897</commentid>
      <comment_count>1</comment_count>
      <who name="Sean Brogan">sean.brogan</who>
      <bug_when>2023-09-07 15:32:18 +0000</bug_when>
      <thetext>There is a lot of existing art in UEFI systems (see edk2 performancelib.h) where more
        detailed fw records are added to the FBPT. The FBPT has an open-ended design with 5 named
        fields and then variable length list of other measurements. The 5 named fields are useful
        for an operating system if they want to show the end user high level boot performance
        metrics (Example: Windows "Task Manager" -> Start up tab shows one of these values). The
        detailed records are useful to developers of the hw platform but i don't see a use case for
        standardization here given the diversity of components. Additionally, it seems like there is
        a lot in conflict with your Table 5.119. The prior art uses GUIDs because in UEFI we have
        hundreds of components and string/naming conflicts are a thing. Prior art also shows we
        measure a lot more than just start and finish of a component. UEFI host fw has more complex
        interactions that are useful for developers to measure (callbacks, events, device
        connection, function times rather than just full component, cross component measurements,
        etc). See Macros in PerformanceLib.h. On another point, if I read your ECR correctly you are
        putting records directly into the FPDT. For example, if the FPDT contains multiple MBPDR
        (5.117) which each contain variable length arrays within them. This doesn't match the design
        and would cause problems with ACPI as it would be changing as each record is added (grows)
        and will need more linear memory as well as check-summed for acpi header. The FPDT (acpi
        table) today contains only max 3 records which are structures with pointers to other tables.
        This allows those tables to be outside of acpi memory, not check-summed, and change without
        impacting ACPI tables.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>21898</commentid>
      <comment_count>2</comment_count>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2023-09-07 16:48:51 +0000</bug_when>
      <thetext>(In reply to Sean Brogan from comment #1) > There is a lot of existing art in UEFI
        systems (see edk2 performancelib.h) > where more detailed fw records are added to the FBPT.
        The FBPT has an > open-ended design with 5 named fields and then variable length list of
        other > measurements. The 5 named fields are useful for an operating system if they > want
        to show the end user high level boot performance metrics (Example: > Windows "Task Manager"
        -> Start up tab shows one of these values). The > detailed records are useful to developers
        of the hw platform but i don't see > a use case for standardization here given the diversity
        of components. Table 5.119 (HFCBP) is defined in a generic way. The intent behind this data
        structure is to enable timestamping of the Arm "Secure World" boot process. The ECR opted to
        adopt a more architecture-agnostic definition in the hope that other firmware components
        could use the same standard data structure. > > Additionally, it seems like there is a lot
        in conflict with your Table > 5.119. The prior art uses GUIDs because in UEFI we have
        hundreds of > components and string/naming conflicts are a thing. Prior art also shows we >
        measure a lot more than just start and finish of a component. UEFI host fw > has more
        complex interactions that are useful for developers to measure > (callbacks, events, device
        connection, function times rather than just full > component, cross component measurements,
        etc). See Macros in > PerformanceLib.h. Would a "Component identifier" field definition as a
        16-character string or GUID address this concern? > > On another point, if I read your ECR
        correctly you are putting records > directly into the FPDT. For example, if the FPDT
        contains multiple MBPDR > (5.117) which each contain variable length arrays within them.
        This doesn't > match the design and would cause problems with ACPI as it would be changing >
        as each record is added (grows) and will need more linear memory as well as > check-summed
        for acpi header. The FPDT (acpi table) today contains only max > 3 records which are
        structures with pointers to other tables. This allows > those tables to be outside of acpi
        memory, not check-summed, and change > without impacting ACPI tables. The ECR intent is that
        the new tables (5.117, 5.119 and 5.120) are placed in the FBPT and not in the FPDT. The FBPT
        is not check-summed and could, in theory, be extended. We could reasonably assume that all
        micro-controllers would have initialized before ExitBootServices. If any micro initializes
        after ExitBootServices it's also legal for it not to be represented in the FBPT.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22006</commentid>
      <comment_count>3</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2023-10-18 23:00:34 +0000</bug_when>
      <thetext>Jose.Marinho@arm.com: please take it.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22559</commentid>
      <comment_count>4</comment_count>
      <attachid>1474</attachid>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2024-02-09 13:08:25 +0000</bug_when>
      <thetext>Created attachment 1474 ECR_ACPI_FPDT_Host_fw_and_micros_boot_perf_v2 v2 introduces
        the following constructs: - String Event Record - Timestamp Delta Record - Microcontroller
        Boot Performance Table Pointer The attached ECR replicates the changes from
        https://github.com/UEFI/ACPI_spec/commit/d57351cacd4759d0bfdca8dc511796cf862e7d4c</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22564</commentid>
      <comment_count>5</comment_count>
      <who name="Rob Gough">rgough</who>
      <bug_when>2024-02-13 12:53:11 +0000</bug_when>
      <thetext>The preexisting performance records do not have a notion of Time Domains- can we
        assume that they are all in a single "Host CPU" domain? If so, we need some identifier in
        the timestamp delta record (or other means) to determine which domain describes the "Host
        CPU" domain. This would apply to entries the S3PT and FBPT. While this section is being
        updated, it would be nice to clarify and distinguish the different Record Types- those that
        are Performance Events (those logging events with timestamps) and other structures- pointers
        or the new Timestamp Delta structure.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22660</commentid>
      <comment_count>6</comment_count>
      <attachid>1477</attachid>
      <who name="Ankit Sinha">ankit.sinha</who>
      <bug_when>2024-02-27 11:53:37 +0000</bug_when>
      <thetext>Created attachment 1477 ECR ACPI FPDT Host FW and micros boot perf v3 v3 changes: -
        Modified introduction of FPDT - Updated FPDT hierarchy structure - Addressed feedback
        comments</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22735</commentid>
      <comment_count>7</comment_count>
      <attachid>1480</attachid>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2024-03-06 08:26:20 +0000</bug_when>
      <thetext>Created attachment 1480 ECR_ACPI_FPDT_Host_fw_and_micros_boot_perf_v4 v4 changes: -
        Make fields in "String Event Record" all naturally aligned -- add padding at offset 4.</thetext>
    </long_desc>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1409</attachid>
      <date>2023-09-07 12:52:34 +0000</date>
      <delta_ts>2023-09-07 12:52:34 +0000</delta_ts>
      <desc>ECR_ACPI_FPDT_Host_fw_and_micros_boot_perf_v1</desc>
      <filename>ECR_ACPI_FPDT_Host_fw_and_micros_boot_perf_v1.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>83131</size>
      <attacher name="Jose Marinho">Jose.Marinho</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1474</attachid>
      <date>2024-02-09 13:08:25 +0000</date>
      <delta_ts>2024-02-09 13:08:25 +0000</delta_ts>
      <desc>ECR_ACPI_FPDT_Host_fw_and_micros_boot_perf_v2</desc>
      <filename>ECR_ACPI_FPDT_Host_fw_and_micros_boot_perf_v2_BZ.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>223462</size>
      <attacher name="Jose Marinho">Jose.Marinho</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1477</attachid>
      <date>2024-02-27 11:53:37 +0000</date>
      <delta_ts>2024-02-27 11:53:37 +0000</delta_ts>
      <desc>ECR ACPI FPDT Host FW and micros boot perf v3</desc>
      <filename>ECR_ACPI_FPDT_Host_fw_and_micros_boot_perf_v3.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>225402</size>
      <attacher name="Ankit Sinha">ankit.sinha</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1480</attachid>
      <date>2024-03-06 08:26:20 +0000</date>
      <delta_ts>2024-03-06 08:26:20 +0000</delta_ts>
      <desc>ECR_ACPI_FPDT_Host_fw_and_micros_boot_perf_v4</desc>
      <filename>ECR_ACPI_FPDT_Host_fw_and_micros_boot_perf_v4.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>226095</size>
      <attacher name="Jose Marinho">Jose.Marinho</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4553</bug_id>
    <creation_ts>2023-09-19 08:36:31 +0000</creation_ts>
    <short_desc>Update DEFAULT_TTL to IANA's default</short_desc>
    <delta_ts>2023-10-18 22:56:26 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Jose Marinho">Jose.Marinho</reporter>
    <assigned_to name="Jose Marinho">Jose.Marinho</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cc>Jose.Marinho</cc>
    <cc>samer.el-haj-mahmoud</cc>
    <cf_industrystandardspecifications>UEFI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>21918</commentid>
      <comment_count>0</comment_count>
      <attachid>1410</attachid>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2023-09-19 08:36:31 +0000</bug_when>
      <thetext>Created attachment 1410 ECR_set_default_TTL_to_64 IANA specifies the current default
        time to live (TTL) to be 64, see
        https://www.iana.org/assignments/ip-parameters/ip-parameters.xhtml#ip-parameters-2 UEFI has
        DEFAULT_TTL set to 16. This ECR updates the DEFAULT_TTL to 64, in accordance with IANA.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22004</commentid>
      <comment_count>1</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2023-10-18 22:56:26 +0000</bug_when>
      <thetext>Jose.Marinho@arm.com: please work it.</thetext>
    </long_desc>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1410</attachid>
      <date>2023-09-19 08:36:31 +0000</date>
      <delta_ts>2023-09-19 08:36:31 +0000</delta_ts>
      <desc>ECR_set_default_TTL_to_64</desc>
      <filename>ECR_set_default_TTL_to_64.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>49581</size>
      <attacher name="Jose Marinho">Jose.Marinho</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4800</bug_id>
    <creation_ts>2024-06-26 14:28:13 +0000</creation_ts>
    <short_desc>RAS2 add ADDRESS_TRANSLATION service</short_desc>
    <delta_ts>2024-08-08 14:11:47 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Jose Marinho">Jose.Marinho</reporter>
    <assigned_to name="Jose Marinho">Jose.Marinho</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cf_industrystandardspecifications>ACPI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>23160</commentid>
      <comment_count>0</comment_count>
      <attachid>1522</attachid>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2024-06-26 14:28:13 +0000</bug_when>
      <thetext>Created attachment 1522 RAS2_ADDRESS_TRANSLATION This ECR adds the
        ADDRESS_TRANSLATION feature to the RAS2 table Memory RAS Features. The ADDRESS_TRASNLATION
        service enabled both PA 2 LA and LA 2 PA translation to be obtained.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23196</commentid>
      <comment_count>1</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2024-07-10 20:46:41 +0000</bug_when>
      <thetext>Jose Marinho: please work on it.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23292</commentid>
      <comment_count>2</comment_count>
      <attachid>1529</attachid>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2024-08-01 17:16:22 +0000</bug_when>
      <thetext>Created attachment 1529 CodeFirst_ACPI_RAS2_PA2LA_TRANSLATION_v7</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23306</commentid>
      <comment_count>3</comment_count>
      <attachid>1532</attachid>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2024-08-08 14:11:47 +0000</bug_when>
      <thetext>Created attachment 1532 ACPI_RAS2_PA2LA_TRANSLATION_v8</thetext>
    </long_desc>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1522</attachid>
      <date>2024-06-26 14:28:13 +0000</date>
      <delta_ts>2024-06-26 14:28:13 +0000</delta_ts>
      <desc>RAS2_ADDRESS_TRANSLATION</desc>
      <filename>CodeFirst_ACPI_RAS2_ADDRESS_TRANSLATION_v4.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>37075</size>
      <attacher name="Jose Marinho">Jose.Marinho</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1529</attachid>
      <date>2024-08-01 17:16:22 +0000</date>
      <delta_ts>2024-08-01 17:16:22 +0000</delta_ts>
      <desc>CodeFirst_ACPI_RAS2_PA2LA_TRANSLATION_v7</desc>
      <filename>CodeFirst_ACPI_RAS2_PA2LA_TRANSLATION_v7.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>47421</size>
      <attacher name="Jose Marinho">Jose.Marinho</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1532</attachid>
      <date>2024-08-08 14:11:47 +0000</date>
      <delta_ts>2024-08-08 14:11:47 +0000</delta_ts>
      <desc>ACPI_RAS2_PA2LA_TRANSLATION_v8</desc>
      <filename>CodeFirst_ACPI_RAS2_PA2LA_TRANSLATION_v8.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>47446</size>
      <attacher name="Jose Marinho">Jose.Marinho</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4855</bug_id>
    <creation_ts>2024-09-26 06:14:43 +0000</creation_ts>
    <short_desc>Add status field to RAS2 PATROL_SCRUB Parameter Block Structure</short_desc>
    <delta_ts>2024-10-23 20:58:30 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Jose Marinho">Jose.Marinho</reporter>
    <assigned_to name="Jose Marinho">Jose.Marinho</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cf_industrystandardspecifications>ACPI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>23411</commentid>
      <comment_count>0</comment_count>
      <attachid>1539</attachid>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2024-09-26 06:14:43 +0000</bug_when>
      <thetext>Created attachment 1539 CodeFirst_ACPI_RAS2_SCRUB_v3.0 The RAS2 PATROL_SCRUB command
        has no way to output a status. This ECR adds a status field to the scrub parameter block
        structure (similar to other RAS2 parameter block structures) so that the result of a scrub
        request can be communicated back to standard software.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23486</commentid>
      <comment_count>1</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2024-10-23 20:58:30 +0000</bug_when>
      <thetext>Jose Marinho: please work on it.</thetext>
    </long_desc>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1539</attachid>
      <date>2024-09-26 06:14:43 +0000</date>
      <delta_ts>2024-09-26 06:14:43 +0000</delta_ts>
      <desc>CodeFirst_ACPI_RAS2_SCRUB_v3.0</desc>
      <filename>CodeFirst_ACPI_RAS2_SCRUB_v3.0.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>33656</size>
      <attacher name="Jose Marinho">Jose.Marinho</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4776</bug_id>
    <creation_ts>2024-05-15 17:33:01 +0000</creation_ts>
    <short_desc>Changes to CPER definition for PCIe</short_desc>
    <delta_ts>2024-06-05 12:02:42 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="LeoDuran@AMD">leo.duran</reporter>
    <assigned_to name="LeoDuran@AMD">leo.duran</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cf_industrystandardspecifications>UEFI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>23035</commentid>
      <comment_count>0</comment_count>
      <attachid>1509</attachid>
      <who name="LeoDuran@AMD">leo.duran</who>
      <bug_when>2024-05-15 17:33:01 +0000</bug_when>
      <thetext>Created attachment 1509 Initial submission # Summary of the change This ECR addresses
        a gap in a CPER definition to allow CXL.io errors reported by a CXL RCH (Downstream port)
        via AER. # Problem Statement The standard PCIe CPER definition only allows for a BDF
        address, whereas a CXL RCH is MMIO-based. # Proposed Solution Amend the standard PCIe CPER
        definition to include the MMIO base address of a Root Complex Register Block (RCRB), as in
        the case of a CXL RCH. # Benefits of the change Enables Firmware-First support of CXL.io
        errors reported by a CXL RCH (Downstream port) via AER.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23042</commentid>
      <comment_count>1</comment_count>
      <who name="LeoDuran@AMD">leo.duran</who>
      <bug_when>2024-05-16 18:14:05 +0000</bug_when>
      <thetext>CXL_RCH_CPER_v2: Fix reference to the relevant spec. Text changed from "ACPI v6.5" to
        "UEFI v2.10".</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23043</commentid>
      <comment_count>2</comment_count>
      <attachid>1510</attachid>
      <who name="LeoDuran@AMD">leo.duran</who>
      <bug_when>2024-05-16 18:15:55 +0000</bug_when>
      <thetext>Created attachment 1510 CXL_RCH_CPER_v2 Use "UEFI v2.10" instead of "ACPI v6.5".</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23045</commentid>
      <comment_count>3</comment_count>
      <attachid>1511</attachid>
      <who name="LeoDuran@AMD">leo.duran</who>
      <bug_when>2024-05-20 15:09:25 +0000</bug_when>
      <thetext>Created attachment 1511 CXL_RCH_CPER_v3 1) Clarify the term RCH. 2) Add some language
        clean-up to the CXL protocol CPER definition.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23069</commentid>
      <comment_count>4</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2024-05-29 20:56:28 +0000</bug_when>
      <thetext>Leo is working on it.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23070</commentid>
      <comment_count>5</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2024-05-29 20:57:43 +0000</bug_when>
      <thetext>Leo is working on it. Suggest to use markdown file format to track doc change.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23081</commentid>
      <comment_count>6</comment_count>
      <attachid>1516</attachid>
      <who name="LeoDuran@AMD">leo.duran</who>
      <bug_when>2024-05-30 09:59:05 +0000</bug_when>
      <thetext>Created attachment 1516 CXL_RCH_CPER_v3 (MD format) Converted v3 file to MD format...
        I hope that works!</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23090</commentid>
      <comment_count>7</comment_count>
      <attachid>1517</attachid>
      <who name="LeoDuran@AMD">leo.duran</who>
      <bug_when>2024-06-05 12:02:42 +0000</bug_when>
      <thetext>Created attachment 1517 CXL_RCH_CPER_v4 (MD format) Fix typo: RCIeP --> RCiEP.</thetext>
    </long_desc>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1509</attachid>
      <date>2024-05-15 17:33:01 +0000</date>
      <delta_ts>2024-05-15 17:33:01 +0000</delta_ts>
      <desc>Initial submission</desc>
      <filename>CXL_RCH_CPER.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>36689</size>
      <attacher name="LeoDuran@AMD">leo.duran</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1510</attachid>
      <date>2024-05-16 18:15:55 +0000</date>
      <delta_ts>2024-05-16 18:15:55 +0000</delta_ts>
      <desc>CXL_RCH_CPER_v2</desc>
      <filename>CXL_RCH_CPER_v2.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>36726</size>
      <attacher name="LeoDuran@AMD">leo.duran</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1511</attachid>
      <date>2024-05-20 15:09:25 +0000</date>
      <delta_ts>2024-05-20 15:09:25 +0000</delta_ts>
      <desc>CXL_RCH_CPER_v3</desc>
      <filename>CXL_RCH_CPER_v3.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>39903</size>
      <attacher name="LeoDuran@AMD">leo.duran</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1516</attachid>
      <date>2024-05-30 09:59:05 +0000</date>
      <delta_ts>2024-05-30 09:59:05 +0000</delta_ts>
      <desc>CXL_RCH_CPER_v3 (MD format)</desc>
      <filename>CXL_RCH_CPER_v3.md</filename>
      <type>application/octet-stream</type>
      <size>62416</size>
      <attacher name="LeoDuran@AMD">leo.duran</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1517</attachid>
      <date>2024-06-05 12:02:42 +0000</date>
      <delta_ts>2024-06-05 12:02:42 +0000</delta_ts>
      <desc>CXL_RCH_CPER_v4 (MD format)</desc>
      <filename>CXL_RCH_CPER_v4.md</filename>
      <type>application/octet-stream</type>
      <size>62416</size>
      <attacher name="LeoDuran@AMD">leo.duran</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4483</bug_id>
    <creation_ts>2023-06-15 09:32:17 +0000</creation_ts>
    <short_desc>Introduce new status code to UEFI PI specification 1.8</short_desc>
    <delta_ts>2024-04-25 19:44:47 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Nickle Wang">nicklew</reporter>
    <assigned_to name="Nickle Wang">nicklew</assigned_to>
    <cc>abner.chang</cc>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cc>isaac.w.oram</cc>
    <cc>vincent.zimmer</cc>
    <cf_industrystandardspecifications>UEFI Platform Initialization Specification Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>21661</commentid>
      <comment_count>0</comment_count>
      <who name="Nickle Wang">nicklew</who>
      <bug_when>2023-06-15 09:32:17 +0000</bug_when>
      <thetext># Title: Introduce new status code to UEFI PI specification 1.8 # Status: Draft
        [Status] must be one of the following: * Draft * Submitted to industry standard forum *
        Accepted by industry standard forum * Accepted by industry standard forum with modifications
        * Rejected by industry standard forum # Document: UEFI Platform Initialization Specification
        Version 1. Here are some examples of [Title and Version]: * UEFI Specification Version 2.8 *
        ACPI Specification Version 6.3 * UEFI Shell Specification Version 2.2 * UEFI Platform
        Initialization Specification Version 1.7 * UEFI Platform Initialization Distribution
        Packaging Specification Version 1.1 # License SPDX-License-Identifier: CC-BY-4.0 #
        Submitter: Nickle Wang<nicklew @nvidia.com> # Summary of the change Introduce
        EFI_COMPUTING_UNIT_MANAGEABILITY status code for ManageabilityPkg and Redfish*Pkg # Benefits
        of the change EFI_COMPUTING_UNIT_MANAGEABILITY will be used in edk2 RedfishPkg and
        edk2-redfish-client RedfishClientPkg to report Redfish operation errors. It will also be
        used to report errors in edk2-platforms ManageabilityPkg. # Impact of the change This is
        newly introduced status code for reporting manageabilty status so I don't see impact to
        current system. # Detailed description of the change [normative updates]
        EFI_COMPUTING_UNIT_MANAGEABILITY is created as one of the subclasses in computing unit
        class. #define EFI_COMPUTING_UNIT_CACHE (EFI_COMPUTING_UNIT | 0x00040000) #define
        EFI_COMPUTING_UNIT_MEMORY (EFI_COMPUTING_UNIT | 0x00050000) #define
        EFI_COMPUTING_UNIT_CHIPSET (EFI_COMPUTING_UNIT | 0x00060000) + #define
        EFI_COMPUTING_UNIT_MANAGEABILITY (EFI_COMPUTING_UNIT | 0x00070000) Below operation values
        are defined to report failure in manageability related operations. I only provide the
        definitions for Redfish functions but the failure case like in MCTP, IPMI and KCS can be
        created in the future. +/// +/// Computing Unit Manageability Subclass Error Code
        definitions. +/// The detail information is reported by
        REPORT_STATUS_CODE_WITH_EXTENDED_DATA +// with ASCII string in EFI_STATUS_CODE_STRING_DATA.
        +///@{ +#define EFI_MANAGEABILITY_EC_REDFISH_COMMUNICATION_ERROR (EFI_SUBCLASS_SPECIFIC |
        0x00000000) +#define EFI_MANAGEABILITY_EC_REDFISH_HOST_INTERFACE_ERROR
        (EFI_SUBCLASS_SPECIFIC | 0x00000001) +#define
        EFI_MANAGEABILITY_EC_REDFISH_BOOTSTRAP_CREDENTIAL_ERROR (EFI_SUBCLASS_SPECIFIC | 0x00000002)
        * EFI_MANAGEABILITY_EC_REDFISH_COMMUNICATION_ERROR will be used to report communication
        failure between host and Redfish service providers (or BMC). *
        EFI_MANAGEABILITY_EC_REDFISH_HOST_INTERFACE_ERROR is reported when host system can not
        create Redfish host interface due to some errors. *
        EFI_MANAGEABILITY_EC_REDFISH_BOOTSTRAP_CREDENTIAL_ERROR is reported when host system cannot
        get bootstrap credentials by following the Host Interface standard. Detail reason will be
        provided in ASCII string by calling REPORT_STATUS_CODE_WITH_EXTENDED_DATA(). RFC: *
        https://edk2.groups.io/g/devel/message/105525 *
        https://edk2.groups.io/g/devel/message/105595 * https://edk2.groups.io/g/rfc/message/802</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>21662</commentid>
      <comment_count>1</comment_count>
      <who name="Nickle Wang">nicklew</who>
      <bug_when>2023-06-15 09:53:58 +0000</bug_when>
      <thetext>I follow the code-first-process and create a branch at edk2-staging:
        https://github.com/tianocore/edk2-staging/commits/BZ4483-new-manageablity-pi-status-code</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>21747</commentid>
      <comment_count>2</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2023-07-18 22:40:03 +0000</bug_when>
      <thetext>nicklew@nvidia.com is working on it.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>21793</commentid>
      <comment_count>3</comment_count>
      <who name="Nickle Wang">nicklew</who>
      <bug_when>2023-08-01 21:19:48 +0000</bug_when>
      <thetext>Update status: M02395: Code first - Introduce new status code for ManageabilityPkg
        and Redfish*Pkg https://mantis.uefi.org/mantis/view.php?id=2395 (feedback) approved as new
        content Minutes of 7/20/2023 meeting: https://members.uefi.org/wg/piwg/mail/thread/9738</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22985</commentid>
      <comment_count>4</comment_count>
      <who name="Nickle Wang">nicklew</who>
      <bug_when>2024-04-25 19:44:47 +0000</bug_when>
      <thetext>New status code is in PI 1.9 draft review now. 1.9 2395 New status code for
        ManageabilityPkg and Redfish*Pkg Section III-6.7.1, Table 6.5, Section III-6.4.1.4.9 PI 1.9
        draft: https://members.uefi.org/wg/piwg/document/1434</thetext>
    </long_desc>
  </bug>
  <bug>
    <bug_id>4594</bug_id>
    <creation_ts>2023-11-08 20:02:22 +0000</creation_ts>
    <short_desc>Add PCC Resource Descriptors</short_desc>
    <delta_ts>2024-06-24 14:40:33 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Rob Gough">rgough</reporter>
    <assigned_to name="Rob Gough">rgough</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cc>rgough</cc>
    <cc>samer.el-haj-mahmoud</cc>
    <cc>Souvik.Chakravarty</cc>
    <cf_industrystandardspecifications>ACPI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>22140</commentid>
      <comment_count>0</comment_count>
      <attachid>1428</attachid>
      <who name="Rob Gough">rgough</who>
      <bug_when>2023-11-08 20:02:22 +0000</bug_when>
      <thetext>Created attachment 1428 ACPI ECR- Add PCC Resource Descriptors This ECR adds the
        Platform Communication Channel type to the list of valid Resource Types encoded in WORD,
        DWORD, and QWORD Address Space resource descriptors. Additionally, Resource Macros are
        defined to generate Resource Buffers for PCC use of these Resources. Lastly, the
        Word/DWord/QWordSpace resource macro descriptions for the ResourceType argument is
        incorrect. This change corrects this issue as well.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22160</commentid>
      <comment_count>1</comment_count>
      <who name="Souvik Chakravarty">Souvik.Chakravarty</who>
      <bug_when>2023-11-15 11:01:35 +0000</bug_when>
      <thetext>Can we add some clarification in the xWordPCC macro as to what the various fields in
        the corresponding address space descriptors get set to (esp those which are not directly
        specified by the Macro)? Also perhaps some guidance that this is not meant to be used for
        _SRS/_PRS type usages as of now, and should only be used for static descriptions?</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22217</commentid>
      <comment_count>2</comment_count>
      <attachid>1432</attachid>
      <who name="Rob Gough">rgough</who>
      <bug_when>2023-12-04 17:39:48 +0000</bug_when>
      <thetext>Created attachment 1432 ACPI ECR- Add PCC Resource Descriptors v2 This updated
        version of the ECR addresses the feedback above.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>22316</commentid>
      <comment_count>3</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2024-01-02 21:59:49 +0000</bug_when>
      <thetext>rgough@amperecomputing.com: please work on it. please use markdown format for the
        proposed change.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23150</commentid>
      <comment_count>4</comment_count>
      <who name="Samer El-Haj-Mahmoud">samer.el-haj-mahmoud</who>
      <bug_when>2024-06-24 14:40:33 +0000</bug_when>
      <thetext>Corresponding ASWG ECR approved for ACPI.next:
        https://mantis.uefi.org/mantis/view.php?id=2429</thetext>
    </long_desc>
    <attachment isobsolete="1" ispatch="0" isprivate="0">
      <attachid>1428</attachid>
      <date>2023-11-08 20:02:22 +0000</date>
      <delta_ts>2023-12-04 17:39:48 +0000</delta_ts>
      <desc>ACPI ECR- Add PCC Resource Descriptors</desc>
      <filename>ACPI_ECR_PCC_Descriptors_CF_v1.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>31592</size>
      <attacher name="Rob Gough">rgough</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1432</attachid>
      <date>2023-12-04 17:39:48 +0000</date>
      <delta_ts>2023-12-04 17:39:48 +0000</delta_ts>
      <desc>ACPI ECR- Add PCC Resource Descriptors v2</desc>
      <filename>ACPI_ECR_PCC_Descriptors_CF_v2.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>31793</size>
      <attacher name="Rob Gough">rgough</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4352</bug_id>
    <creation_ts>2023-03-01 15:07:13 +0000</creation_ts>
    <short_desc>add verbose option to Shell dmem command</short_desc>
    <delta_ts>2023-03-21 22:06:48 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Stuart Yoder">stuart.yoder</reporter>
    <assigned_to name="Stuart Yoder">stuart.yoder</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cc>Sam.Kaynor</cc>
    <cc>samer.el-haj-mahmoud</cc>
    <cc>Sunny.Wang</cc>
    <cc>vincent.stehle</cc>
    <cf_industrystandardspecifications>UEFI Shell Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>21131</commentid>
      <comment_count>0</comment_count>
      <who name="Stuart Yoder">stuart.yoder</who>
      <bug_when>2023-03-01 15:07:13 +0000</bug_when>
      <thetext>When the dmem command is run in the UEFI Shell without any arguments it displays the
        name and address of EFI system table entries. The proposal is to add a -verbose argument to
        the dmem command which will parse and provide a human readable display of the RT_PROPERTIES,
        CONFORMANCE_PROFILE, and IMAGE_ EXECUTION_INFO tables if they are present. Example below:
        fs0:\> dmem -verbose Memory Address 000000003FF7D808 200 Bytes 3FF7D808: 49 42 49 20 53 59
        53 54-02 00 01 00 78 00 00 00 *IBI SYST....x...* ... Valid EFI Header at Address
        000000003FF7D808 -------------------------------------------- System: Table Structure size
        00000078 revision 00010002 ConIn (3F1AD388) ConOut (3F1AF288) StdErr (3F1ADD08) Runtime
        Services 000000003F3FC318 ... RT Properties Table --------------------------- Version 0x1
        Runtime Services Supported: GET_TIME 1 SET_TIME 1 WAKEUP_TIME 0 ... Conformance Profile
        Table --------------------------- Version 0x1 Profile GUIDs: UEFI_SPEC_GUID
        523c91af-a195-4382-818d-295fe4006465 Image Execution Table
        -------------------------------------------- EFI\BOOT\grubaa64.efi: SIG_NOT_FOUND</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>21132</commentid>
      <comment_count>1</comment_count>
      <attachid>1333</attachid>
      <who name="Stuart Yoder">stuart.yoder</who>
      <bug_when>2023-03-01 15:08:58 +0000</bug_when>
      <thetext>Created attachment 1333 ECR</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>21239</commentid>
      <comment_count>2</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2023-03-21 22:06:48 +0000</bug_when>
      <thetext>stuart.yoder@arm.com: please work it.</thetext>
    </long_desc>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1333</attachid>
      <date>2023-03-01 15:08:58 +0000</date>
      <delta_ts>2023-03-01 15:08:58 +0000</delta_ts>
      <desc>ECR</desc>
      <filename>VerboseOptionDmem_v1.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>31788</size>
      <attacher name="Stuart Yoder">stuart.yoder</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>3721</bug_id>
    <creation_ts>2021-11-05 10:00:04 +0000</creation_ts>
    <short_desc>Action is set to 'untested' if image is unsigned and hash not found in DB/DBX</short_desc>
    <delta_ts>2021-12-13 13:07:41 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Reference Implementation</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>CONFIRMED</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Joseph Hemann">Joseph.Hemann</reporter>
    <assigned_to name="unassigned">unassigned</assigned_to>
    <cc>bob.c.feng</cc>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cc>Jose.Marinho</cc>
    <cc>xiaolu.jiang</cc>
    <cc>yuwei.chen</cc>
    <cf_industrystandardspecifications>UEFI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_release_observed>EDK II Master</cf_release_observed>
    <cf_target_os>---</cf_target_os>
    <cf_package>SecurityPkg</cf_package>
    <cf_releases_to_fix>EDK II Master</cf_releases_to_fix>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>17693</commentid>
      <comment_count>0</comment_count>
      <who name="Joseph Hemann">Joseph.Hemann</who>
      <bug_when>2021-11-05 10:00:04 +0000</bug_when>
      <thetext>If the image is not signed and the hash of image is not found in DB/DBX, then the
        EFI_IMAGE_INFO_ACTION of the load of said image should be set to,
        EFI_IMAGE_EXECUTION_AUTH_SIG_NOT_FOUND, rather then being left unset as
        EFI_IMAGE_EXECUTION_AUTH_UNTESTED.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>17823</commentid>
      <comment_count>1</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2021-11-23 22:11:06 +0000</bug_when>
      <thetext>Joseph Hemann : can you provide UEFI spec description for this behavior?</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>17825</commentid>
      <comment_count>2</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2021-11-23 22:11:43 +0000</bug_when>
      <thetext>*** Bug 3720 has been marked as a duplicate of this bug. ***</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>17938</commentid>
      <comment_count>3</comment_count>
      <who name="Joseph Hemann">Joseph.Hemann</who>
      <bug_when>2021-12-06 04:21:42 +0000</bug_when>
      <thetext>
        Propsosed patch:
        https://edk2.groups.io/g/devel/message/81836?p=%2C%2C%2C20%2C0%2C0%2C0%3A%3Arecentpostdate%2Fsticky%2C%2Cjoseph+hemann%2C20%2C2%2C0%2C86267110</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>17949</commentid>
      <comment_count>4</comment_count>
      <who name="Jose Marinho">Jose.Marinho</who>
      <bug_when>2021-12-07 15:49:01 +0000</bug_when>
      <thetext>(In reply to gaoliming from comment #1) > Joseph Hemann : can you provide UEFI spec
        description for this behavior? The UEFI spec definition of the Action field in the Image
        Execution Table entries is undergoing review. The BZ ticket tracking the UEFI spec changes
        is here: https://bugzilla.tianocore.org/show_bug.cgi?id=3561</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>17952</commentid>
      <comment_count>5</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2021-12-07 21:39:29 +0000</bug_when>
      <thetext>Joseph: please follow code first process. The code can be added into edk2-staging
        branch first.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>17979</commentid>
      <comment_count>6</comment_count>
      <who name="Joseph Hemann">Joseph.Hemann</who>
      <bug_when>2021-12-13 13:07:41 +0000</bug_when>
      <thetext>
        (In reply to gaoliming from comment #5) > Joseph: please follow code first process.
        The code can be added into > edk2-staging branch first. Yes, code first was the approach I
        was taking, and the patch can be seen in the link to the EDK2 mailing list.
        https://edk2.groups.io/g/devel/message/81836?p=%2C%2C%2C20%2C0%2C0%2C0%3A%3ACreated%2C%2Cjoseph+hemann%2C20%2C2%2C0%2C86267110</thetext>
    </long_desc>
  </bug>
  <bug>
    <bug_id>2995</bug_id>
    <creation_ts>2020-10-05 16:30:06 +0000</creation_ts>
    <short_desc>ACPI Spec ECR - Generic Interrupt Mux</short_desc>
    <delta_ts>2021-05-11 17:35:10 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>IN_PROGRESS</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Normal</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Samer El-Haj-Mahmoud">samer.el-haj-mahmoud</reporter>
    <assigned_to name="Samer El-Haj-Mahmoud">samer.el-haj-mahmoud</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>gaoliming</cc>
    <cc>harb</cc>
    <cc>ikoskinen</cc>
    <cc>pbrobinson</cc>
    <cc>samer.el-haj-mahmoud</cc>
    <cf_industrystandardspecifications>ACPI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>13876</commentid>
      <comment_count>0</comment_count>
      <who name="Samer El-Haj-Mahmoud">samer.el-haj-mahmoud</who>
      <bug_when>2020-10-05 16:30:06 +0000</bug_when>
      <thetext>This ECR introduces a new ACPI concept known as the “Generic Interrupt Mux Device
        (GIMD)”, and associated “Generic Interrupt Mux Instances (GIMI)”. A GIMD handles interrupt
        combining (i.e. group of wired interrupts OR’ed into a single wired interrupt represented by
        a single Global System Interrupt (GSI). This ECR is intended to enable ACPI firmware to
        further describe the details of the interrupt combining logic in a standard way so that OSPM
        can handle these configurations with a new standard software device driver.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>13877</commentid>
      <comment_count>1</comment_count>
      <attachid>570</attachid>
      <who name="Samer El-Haj-Mahmoud">samer.el-haj-mahmoud</who>
      <bug_when>2020-10-05 16:31:03 +0000</bug_when>
      <thetext>Created attachment 570 CodeFirst_ACPI_GIM_ECR.docx First draft of proposal</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>13963</commentid>
      <comment_count>2</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2020-10-13 21:56:49 +0000</bug_when>
      <thetext>Samer: please follow code first process. And, upload the code and doc into the
        staging branch.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>13964</commentid>
      <comment_count>3</comment_count>
      <who name="">gaoliming</who>
      <bug_when>2020-10-13 21:58:00 +0000</bug_when>
      <thetext>The doc should be markdown format.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>14035</commentid>
      <comment_count>4</comment_count>
      <who name="Samer El-Haj-Mahmoud">samer.el-haj-mahmoud</who>
      <bug_when>2020-10-19 17:50:36 +0000</bug_when>
      <thetext>OK will update to markdown and put in edk2-staging</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>14783</commentid>
      <comment_count>5</comment_count>
      <who name="Ilkka Koskinen">ikoskinen</who>
      <bug_when>2021-01-11 19:57:57 +0000</bug_when>
      <thetext>I'd have a couple of comments: 1) I feel like interrupt type and polarity bits should
        be always valid, since they define the summary interrupt routed to a higher level IRQ
        controller and one often needs to tell the IRQ controller what kind of interrupt it is
        dealing with. 2) The other comment concerns the in interrupt clearing method and clear
        register behavior flags. I think, it would be more logical, if value of '1' means "write
        one". That is, I'd swap the values in both flags.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>14787</commentid>
      <comment_count>6</comment_count>
      <who name="">harb</who>
      <bug_when>2021-01-11 23:25:30 +0000</bug_when>
      <thetext>(In reply to Ilkka Koskinen from comment #5) > I'd have a couple of comments: > > 1)
        I feel like interrupt type and polarity bits should be always valid, > since they define the
        summary interrupt routed to a higher level IRQ > controller and one often needs to tell the
        IRQ controller what kind of > interrupt it is dealing with. > > 2) The other comment
        concerns the in interrupt clearing method and clear > register behavior flags. I think, it
        would be more logical, if value of '1' > means "write one". That is, I'd swap the values in
        both flags. Thanks for the feedback. Agree, this makes sense. @Samer, any objections to
        these changes on your side.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>14810</commentid>
      <comment_count>7</comment_count>
      <who name="Samer El-Haj-Mahmoud">samer.el-haj-mahmoud</who>
      <bug_when>2021-01-14 18:13:08 +0000</bug_when>
      <thetext>No objections on the two proposed changes</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>16005</commentid>
      <comment_count>8</comment_count>
      <who name="Samer El-Haj-Mahmoud">samer.el-haj-mahmoud</who>
      <bug_when>2021-05-11 17:35:10 +0000</bug_when>
      <thetext>In Progress ASWG ECR: https://mantis.uefi.org/mantis/view.php?id=2153</thetext>
    </long_desc>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>570</attachid>
      <date>2020-10-05 16:31:03 +0000</date>
      <delta_ts>2020-10-05 16:31:03 +0000</delta_ts>
      <desc>CodeFirst_ACPI_GIM_ECR.docx</desc>
      <filename>CodeFirst_ACPI_GIM_ECR.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>71351</size>
      <attacher name="Samer El-Haj-Mahmoud">samer.el-haj-mahmoud</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>2949</bug_id>
    <creation_ts>2020-09-01 15:13:39 +0000</creation_ts>
    <short_desc>[Unit Test]: Digest Algorithm update for Authenticated Variables</short_desc>
    <delta_ts>2021-04-26 20:48:39 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Reference Implementation</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>IN_PROGRESS</bug_status>
    <resolution />
    <see_also>https://bugzilla.tianocore.org/show_bug.cgi?id=2979</see_also>
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <blocked>2875</blocked>
    <everconfirmed>1</everconfirmed>
    <reporter name="Divneil Wadhawan">divneil.r.wadhawan</reporter>
    <assigned_to name="Divneil Wadhawan">divneil.r.wadhawan</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>jerecox</cc>
    <cc>jiewen.yao</cc>
    <cf_industrystandardspecifications>UEFI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>13596</commentid>
      <comment_count>0</comment_count>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2020-09-01 15:13:39 +0000</bug_when>
      <thetext>This is to track unit test development for Authenticated Variable with EmulatorPkg</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>13602</commentid>
      <comment_count>1</comment_count>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2020-09-02 08:28:34 +0000</bug_when>
      <thetext>The following 2 patches enable Authenticated Variable Unit Test in EmulatorPkg a.
        Enable AuthVar support in Emulator Pkg
        https://github.com/divneil/edk2-staging/pull/new/Bugzilla2949-enable-Authenticated-Variable-Support-in-EmulatorPkg
        b. Unit Test for AuthVar
        https://github.com/divneil/edk2-staging/pull/new/Bugzilla2949-Unit-Test-for-Authenticated-Variables
        This contains the unit-test case of 'PK' update with the following algorithms: a.
        RSA2048/SHA256 b. RSA3072/SHA256 c. RSA4096/SHA256 d. RSA3072/SHA384 # AuthVar Update
        support is in Bug2950 e. RSA4096/SHA512 # AuthVar Update support is in Bug2950</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>13720</commentid>
      <comment_count>2</comment_count>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2020-09-21 03:40:14 +0000</bug_when>
      <thetext>(In reply to Divneil Wadhawan from comment #1) > The following 2 patches enable
        Authenticated Variable Unit Test in > EmulatorPkg > > a. Enable AuthVar support in Emulator
        Pkg > > https://github.com/divneil/edk2-staging/pull/new/Bugzilla2949-enable- >
        Authenticated-Variable-Support-in-EmulatorPkg This patch has been modified to enable SECURE
        BOOT in EmulatorPkg. Following are the details as of now. a. Enable Secure boot in
        EmulatorPkg https://edk2.groups.io/g/devel/message/65335 (Merged) b. Due to cross between
        patches as detailed in https://edk2.groups.io/g/devel/message/65405, a new patch has been
        generated in https://edk2.groups.io/g/devel/message/65410 and is under review. c. Bug2979
        has been raised for enabling SECURE BOOT CI in EmulatorPkg.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>13721</commentid>
      <comment_count>3</comment_count>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2020-09-21 13:22:59 +0000</bug_when>
      <thetext>
        (In reply to Divneil Wadhawan from comment #2) > This patch has been modified to
        enable SECURE BOOT in EmulatorPkg. Following > are the details as of now. > > a. Enable
        Secure boot in EmulatorPkg > https://edk2.groups.io/g/devel/message/65335 (Merged) > > b.
        Due to cross between patches as detailed in > https://edk2.groups.io/g/devel/message/65405,
        a new patch has been generated > in https://edk2.groups.io/g/devel/message/65410 and is
        under review. Merged on edk2/master > b. Unit Test for AuthVar > >
        https://github.com/divneil/edk2-staging/pull/new/Bugzilla2949-Unit-Test-for- >
        Authenticated-Variables > > This contains the unit-test case of 'PK' update with the
        following > algorithms: > a. RSA2048/SHA256 > b. RSA3072/SHA256 > c. RSA4096/SHA256 > d.
        RSA3072/SHA384 # AuthVar Update support is in Bug2950 > e. RSA4096/SHA512 # AuthVar Update
        support is in Bug2950 The directory of the unit test has been changed from
        UnitTestFrameworkPkg to MdeModulePkg. A new branch is created:
        https://github.com/divneil/edk2-staging/pull/new/Bugzilla2949-Unit-Test-for-Authenticated-Variables-MdeModulePkg</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15762</commentid>
      <comment_count>4</comment_count>
      <who name="Jeremiah Cox">jerecox</who>
      <bug_when>2021-04-22 09:21:24 +0000</bug_when>
      <thetext>Let me start by saying, I really like the progress here! I observe that this test is
        testing 2 properties unrelated to the digest on the authenticated variable signature, and
        that may confuse people? (1) Certificate key size (2) Certificate digest algorithm The key
        size on the certificates is unrelated to the proposed code and spec change. The digest
        algorithm used in the certificates are unrelated to the proposed code and spec change. For
        example, if a certificate is generated using RSA-4096 and SHA-512 digests, and then this
        certificate signed an authenticated variable using SHA2-256 digest (this is permitted), that
        would work today without the code change to TianoCore (I tested it a couple weeks ago). This
        is because EDK2 does not look at the certificate key size or certificate digest algorithm,
        that is simply handled by OpenSSL. EDK2 only looks at the digest alg on the outer signature.
        So, what does Jeremiah suggest? The digest algorithm on the signature should be a separate
        parameter from the digest algorithm used when creating certificates. A test for signature
        digest algorithms should select a certificate, then iterate over signature digest
        algorithms. If we want to test certificate key sizes and certificate digest algorithms,
        which is really a test of our usage of OpenSSL (and that is good), but I think that should
        be a separate test. In a nutshell, split into a signature digest test, and a certificate
        test that includes various key sizes and digest algorithms.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15763</commentid>
      <comment_count>5</comment_count>
      <who name="">jiewen.yao</who>
      <bug_when>2021-04-22 11:13:35 +0000</bug_when>
      <thetext>Agree with Jeremiah. Digest algorithm in certificate is totally different with digest
        algorithm in P7 signed data. The code
        https://github.com/tianocore/edk2/blob/master/SecurityPkg/Library/AuthVariableLib/AuthService.c#L1917
        handles mSha256OidValue only. We need extend them to handle more such as mSha384OidValue,
        mSha512OidValue. If the purpose of this Bugzilla is to test different digest size of P7
        data, then we need do more.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15769</commentid>
      <comment_count>6</comment_count>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2021-04-25 09:00:25 +0000</bug_when>
      <thetext>(In reply to Jeremiah Cox from comment #4) > I observe that this test is testing 2
        properties unrelated to the digest on > the authenticated variable signature, and that may
        confuse people? > > (1) Certificate key size > (2) Certificate digest algorithm ---
        ./gen_auth_var.sh --rsa=2048 --digest=256 ./gen_auth_var.sh --rsa=3072 --digest=256
        ./gen_auth_var.sh --rsa=4096 --digest=256 ./gen_auth_var.sh --rsa=3072 --digest=384
        ./gen_auth_var.sh --rsa=4096 --digest=512 --- o The first 3 test cases were written to make
        sure that no regression has happened due to this change. I have come across many people
        referring this
        https://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface/Secure_Boot to
        generate the secure boot key hierarchy, and there's a 1:1 mapping of CertDigestAlgo and
        SignedDataDigestAlgo so, I thought this will bring in parity. o The next 2 test cases,
        followed the same approach of 1:1 mapping. However, it does test the multiple
        SignedDataDigestAlgo, but I understand it is presenting a 1:1 relationship between
        CertDigestAlgo and SignedDataDigestAlgo, which isn't correct. So, as I understand you are
        looking for: for every CertDigestAlgo, SignedDataDigestAlgo = {256, 384, 512) to be tested.
        (In reply to jiewen.yao from comment #5) > > The code >
        https://github.com/tianocore/edk2/blob/master/SecurityPkg/Library/ >
        AuthVariableLib/AuthService.c#L1917 handles mSha256OidValue only. The changes are already in
        https://github.com/divneil/edk2-staging/pull/new/Bugzilla2950-AuthService-extending-digest-algorithm-support
        (Bug2950)</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15780</commentid>
      <comment_count>7</comment_count>
      <who name="Jeremiah Cox">jerecox</who>
      <bug_when>2021-04-26 20:48:39 +0000</bug_when>
      <thetext>To me, the important part is to separate cert digest from signature digest. One
        approach that keeps things untangled is to have 3 separate tests or test engines, each of
        which focuses on testing 1 degree of freedom while keeping the others the same: key size,
        cert digest, signature digest. But I do see the attraction of having 1 test engine that
        perhaps has a nested for loop, where each nest covers an aspects (key size, cert digest,
        signature digest). If this nested for loop was named and documented well, that would
        probably satisfy my concern and be most comprehensive. Thank you for considering this
        feedback, we do appreciate the increase in tests and test coverage (and crypto algorithms).</thetext>
    </long_desc>
  </bug>
  <bug>
    <bug_id>2950</bug_id>
    <creation_ts>2020-09-01 15:15:45 +0000</creation_ts>
    <short_desc>[AuthService]: Digest Algorithm update for Authenticated Variables</short_desc>
    <delta_ts>2021-08-10 13:43:58 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Reference Implementation</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>IN_PROGRESS</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <blocked>2875</blocked>
    <everconfirmed>1</everconfirmed>
    <reporter name="Divneil Wadhawan">divneil.r.wadhawan</reporter>
    <assigned_to name="Divneil Wadhawan">divneil.r.wadhawan</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>felixp</cc>
    <cc>jerecox</cc>
    <cc>jiewen.yao</cc>
    <cc>michael.a.rothman</cc>
    <cc>vincent.zimmer</cc>
    <cf_industrystandardspecifications>UEFI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>13597</commentid>
      <comment_count>0</comment_count>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2020-09-01 15:15:45 +0000</bug_when>
      <thetext>This is to track the code change enabling SHA-384/SHA-512 signing scheme for
        Authenticated Variables.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>13603</commentid>
      <comment_count>1</comment_count>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2020-09-02 08:30:55 +0000</bug_when>
      <thetext>
        The following patch adds support of SHA-384 and SHA-512 in the AuthVar update:
        https://github.com/divneil/edk2-staging/pull/new/Bugzilla2950-AuthService-extending-digest-algorithm-support</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>13722</commentid>
      <comment_count>2</comment_count>
      <attachid>555</attachid>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2020-09-21 13:41:37 +0000</bug_when>
      <thetext>Created attachment 555 efitools to sign with multiple digest algorithms</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>13723</commentid>
      <comment_count>3</comment_count>
      <attachid>556</attachid>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2020-09-21 13:43:03 +0000</bug_when>
      <thetext>Created attachment 556 Convert Binary file to array - Used here for .auth to .h
        conversion</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>13724</commentid>
      <comment_count>4</comment_count>
      <attachid>557</attachid>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2020-09-21 13:45:13 +0000</bug_when>
      <thetext>Created attachment 557 Script to generate Auth Variables with a user specified
        combination of RSAxxxx/SHAyyy</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>13725</commentid>
      <comment_count>5</comment_count>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2020-09-21 14:24:44 +0000</bug_when>
      <thetext>How to Test =========== Directory Structure ------------------- Before the new Auth
        variables can be generated to test the feature, we need to layout directory structure as: .
        ├── cert-to-efi-sig-list (from efitools) ├── ftoarr (executable from file_to_array.c) ├──
        gen_auth_var.sh (script from the attachment section) └── sign-efi-sig-list (from efitools)
        EDK2 ---- o On edk2/master, the following patches are required to test this feature. This
        patch enables unit-test for Authenticated Variables ::
        https://github.com/divneil/edk2-staging/pull/new/Bugzilla2949-Unit-Test-for-Authenticated-Variables-MdeModulePkg
        (From Bug2949) For now, the patch uses Host Test inf file, which will change in next
        version. o This patches enables support for SHA384/SHA512 in AuthService
        https://github.com/divneil/edk2-staging/pull/new/Bugzilla2950-AuthService-extending-digest-algorithm-support
        (From Bug2949) efitools --------- o The efitools must be used from the following repository:
        git://git.kernel.org/pub/scm/linux/kernel/git/jejb/efitools.git o
        https://bugzilla.tianocore.org/attachment.cgi?id=555&action=diff (enables efitools to
        generate RSAxxxx/SHAyyy signatures) ftoarr ------ This generates a C header file which can
        be directly used to test the solution. This is used to convert .auth to .h. The file is
        located at https://bugzilla.tianocore.org/attachment.cgi?id=556. Make sure the compiled
        version name is ftoarr gen_auth_var.sh --------------- This will generate header files
        directly usable for testing ./gen_auth_var.sh --rsa=2048 --digest=256 ./gen_auth_var.sh
        --rsa=3072 --digest=256 ./gen_auth_var.sh --rsa=4096 --digest=256 ./gen_auth_var.sh
        --rsa=3072 --digest=384 ./gen_auth_var.sh --rsa=4096 --digest=512 Post this, the directory
        will contain header files like: PK_2048_256.h # Base Variable PKNew_2048_256.h # Updated
        Variable .... .... These generated files can be used to replace existing files located at:
        %userprofile%\workspace\edk2-staging\MdeModulePkg\Universal\Variable\RuntimeDxe\UnitTest
        EmulatorPkg ----------- EmulatorPkg\EmulatorPkg.dsc :: SECURE_BOOT_ENABLE = TRUE build -p
        EmulatorPkg\EmulatorPkg.dsc -t VS2015 -a X64 #to build EmulatorPkg UnitTest ------- For now,
        invoking the Host based unit test, this will change build -p
        MdeModulePkg\Test\MdeModulePkgHostTest.dsc -t VS2015 -a X64
        %userprofile%\workspace\edk2-staging\Build\EmulatorX64\DEBUG_VS2015\X64\WinHost.exe # For
        executing EmulatorPkg copy
        %userprofile%\workspace\edk2-staging\Build\MdeModulePkg\HostTest\DEBUG_VS2015\X64\AuthVarUnitTestUefiShell.efi
        to %userprofile%\workspace\edk2-staging\Build\EmulatorX64\DEBUG_VS2015\X64\ On edk2 shell,
        this application can then be executed.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>14545</commentid>
      <comment_count>6</comment_count>
      <attachid>608</attachid>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2020-12-10 01:50:33 +0000</bug_when>
      <thetext>Created attachment 608 Convert .auth file to .c file for direct usage in edk2 code</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>14546</commentid>
      <comment_count>7</comment_count>
      <attachid>609</attachid>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2020-12-10 01:52:15 +0000</bug_when>
      <thetext>Created attachment 609 Script to generate Auth Variables with a user specified
        combination of RSAxxxx/SHAyyy</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>14547</commentid>
      <comment_count>8</comment_count>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2020-12-10 02:29:23 +0000</bug_when>
      <thetext>How to Test (Deprecates Comment#5) ================================== Directory
        Structure ------------------- To generate new Authenticated variables for testing, the
        directory needs to be laid out as follows: . ├── cert-to-efi-sig-list (from efitools) ├──
        bin2arr (executable from bin2arr.c) ├── gen_auth_var.sh (script from the attachment section)
        └── sign-efi-sig-list (from efitools) EDK2 ---- o This patch enables unit-test for
        Authenticated Variables ::
        https://github.com/divneil/edk2-staging/pull/new/Bugzilla2949-Unit-Test-for-Authenticated-Variables-MdeModulePkg
        (From Bug2949) o This patches enables support for SHA384/SHA512 in AuthService ::
        https://github.com/divneil/edk2-staging/pull/new/Bugzilla2950-AuthService-extending-digest-algorithm-support
        (From Bug2950) efitools --------- o The efitools must be used from the following repository:
        git://git.kernel.org/pub/scm/linux/kernel/git/jejb/efitools.git o
        https://bugzilla.tianocore.org/attachment.cgi?id=555&action=diff (enables efitools to
        generate RSAxxxx/SHAyyy signatures) bin2arr.c -
        https://bugzilla.tianocore.org/attachment.cgi?id=608
        ----------------------------------------------------------------- o This generates
        Authenticated variable C source files from .auth which can be directly used to test the
        solution. Example: PkRsa2048Sha256.auth -> PkRsa2048Sha256.c o Make sure the compiled
        version name is bin2arr gen_auth_var.sh -
        https://bugzilla.tianocore.org/attachment.cgi?id=609
        ---------------------------------------------------------------------- This will generate
        header files directly usable for testing ./gen_auth_var.sh --rsa=2048 --digest=256
        ./gen_auth_var.sh --rsa=3072 --digest=256 ./gen_auth_var.sh --rsa=4096 --digest=256
        ./gen_auth_var.sh --rsa=3072 --digest=384 ./gen_auth_var.sh --rsa=4096 --digest=512 Post
        this, the directory will contain C source files like: PkRsa2048Sha256.c # Base Variable
        PkNewRsa2048Sha256.c # Updated Variable .... .... These generated files can be used to
        replace existing files located at:
        %userprofile%\workspace\edk2-staging\MdeModulePkg\Universal\Variable\RuntimeDxe\UnitTest
        EmulatorPkg ----------- EmulatorPkg\EmulatorPkg.dsc :: SECURE_BOOT_ENABLE = TRUE build -p
        EmulatorPkg\EmulatorPkg.dsc -t VS2015 -a X64 #to build EmulatorPkg MdeModulePkg - UnitTest
        ------------------------ Build -p MdeModulePkg\MdeModulePkg.dsc -t VS2015 -a X64
        %userprofile%\workspace\edk2-staging\Build\EmulatorX64\DEBUG_VS2015\X64\WinHost.exe # For
        executing EmulatorPkg copy
        %userprofile%\workspace\edk2-staging\Build\MdeModule\DEBUG_VS2015\X64\MdeModulePkg\Universal\Variable\RuntimeDxe\UnitTest\AuthVarUnitTestUefiShell\DEBUG\AuthVarUnitTestUefiShell.efi
        to %userprofile%\workspace\edk2-staging\Build\EmulatorX64\DEBUG_VS2015\X64\ On edk2 shell,
        this application can then be executed.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15276</commentid>
      <comment_count>9</comment_count>
      <who name="Felix">felixp</who>
      <bug_when>2021-03-10 16:55:19 +0000</bug_when>
      <thetext>I suggest to make digest algorithm requirement more specific. I'm talking about this
        line:
        https://github.com/tianocore/edk2-staging/compare/about...divneil:Bugzilla2950-AuthService-extending-digest-algorithm-support?expand=1#diff-3d4adcd1ee38ed7d7daa9955c84db7f049ffe3a97124efe2274552be48f49b35R37
        It currently reads as: Only a digest algorithm greater than or equal to SHA-256 is accepted.
        I propose: Only SHA-2 digest algorithm with the hash size 256 or greater is accepted.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15416</commentid>
      <comment_count>10</comment_count>
      <who name="Vincent Zimmer">vincent.zimmer</who>
      <bug_when>2021-03-24 14:27:35 +0000</bug_when>
      <thetext>that text modification makes sense as sha-2 is a 'family' of hash algorithms, viz
        https://en.wikipedia.org/wiki/SHA-2</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15417</commentid>
      <comment_count>11</comment_count>
      <who name="Michael A. Rothman">michael.a.rothman</who>
      <bug_when>2021-03-24 14:31:14 +0000</bug_when>
      <thetext>Adding an "a" to Felix's comment: I propose: Only a SHA-2 digest algorithm with the
        hash size 256 or greater is accepted.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15453</commentid>
      <comment_count>12</comment_count>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2021-03-30 14:53:29 +0000</bug_when>
      <thetext>(In reply to Felix from comment #9) > I suggest to make digest algorithm requirement
        more specific. > I propose: > Only SHA-2 digest algorithm with the hash size 256 or greater
        is accepted. (In reply to Michael A. Rothman from comment #11) > Adding an "a" to Felix's
        comment: > > I propose: > Only a SHA-2 digest algorithm with the hash size 256 or greater is
        accepted. Updated the branch with the line containing "a" :)</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15460</commentid>
      <comment_count>13</comment_count>
      <who name="">jiewen.yao</who>
      <bug_when>2021-03-30 19:04:08 +0000</bug_when>
      <thetext>Is there any special reason to forbid SHA-3 family?</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15489</commentid>
      <comment_count>14</comment_count>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2021-03-31 14:42:33 +0000</bug_when>
      <thetext>(In reply to jiewen.yao from comment #13) > Is there any special reason to forbid
        SHA-3 family? Hmm, the patch is to add the new digests to the sign verification as only
        SHA256 is allowed from SHA-2 family. The aim is not to forbid SHA-3. From understanding
        perspective, is SHA-3 getting traction? Also, I don't think edk2 openssl is supporting PKCS7
        sign verification with SHA-3.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15760</commentid>
      <comment_count>15</comment_count>
      <who name="Jeremiah Cox">jerecox</who>
      <bug_when>2021-04-21 20:39:47 +0000</bug_when>
      <thetext>I have comments on AuthVariableDigestUpdate.md , the proposed updates to the UEFI
        Specification. ====== ITEM 1: spec specificity ====== I suspect that the original UEFI Spec
        "SHA-256" wording came from Microsoft; my apologies for not being more crypto agile. I would
        prefer future-proof wording here that does not exclude future algorithms, or rather, that
        does not require updating when we add algorithms in the future. The proposed wording is
        unclear on algorithm SHA-512/224 (truncated 512), and lets please be accepting of "SHA-3"
        without revisiting and updating working here. More explicitly, I'd prefer to replace: "<b>Only
        a SHA-2 digest algorithm with the hash size 256 or greater is accepted.</b>" With either of
        the following suggestions: (a) <remove text> OR (b) "Refer to 'Algorithms that may be used with
        EFI_HASH2_PROTOCOL' for a list of digest algorithms." OR (c) <similar to (b), but find me a single home in the spec for us to declare the recommended algorithms for platforms to support> ====== ITEM 2:
        minimums and downgrades ====== This opens up the maximum digest size, but provides no
        enforcement of a minimum. I could imagine a platform wanting a platform-wide minimum, say to
        require SHA2-384 (when SHA2-256 is determined by the platform owner to be insufficient).
        Going further, what about per-variable digest minimums, if I use SHA2-384 as the digest when
        I create the PK, I can later delete the PK using a SHA2-256 digest algorithm, correct?
        Should each variable have its own minimum that is declared (or assumed selected) at creation
        time? If I create a PK using SHA2-512, should all future SetVariable() operations on that
        variable require SHA2-512 (or better, and what is better?). Or perhaps we don't allow
        "better", because "better" might not really be "better" - snap to digest type/size at
        creation and use that until deletion (but that excludes upgrading a digest across a key
        update). ============ Just Sharing ============ EDK2 PyTools Library has some OS-independent
        Python for building and manipulating many of these objects...
        https://github.com/tianocore/edk2-pytool-library/blob/5b2dbd7b315743caa626c1a4657c642d491ea8c3/edk2toollib/uefi/authenticated_variables_structure_support.py</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15772</commentid>
      <comment_count>16</comment_count>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2021-04-26 02:30:00 +0000</bug_when>
      <thetext>(In reply to Jeremiah Cox from comment #15) > "<b>Only a SHA-2 digest algorithm with
        the hash size 256 or greater is > accepted.</b>" > > With either of the following
        suggestions: > > (a) <remove text> > > OR > > (b) "Refer to 'Algorithms that may be used with
        EFI_HASH2_PROTOCOL' for a > list of digest algorithms." I checked the "UEFI Spec 2.8,
        Section 37.2.2, Table 30. Algorithms that may be used with EFI_HASH2_PROTOCOL", it mentions
        SHA1 and MD5, although with a notification, that new driver implementation are encouraged to
        not use SHA-1 and MD5. If we go for this option, then we must remove SHA-1 and MD5 from the
        table. > ====== > ITEM 2: minimums and downgrades > ====== > This opens up the maximum
        digest size, but provides no enforcement of a > minimum. I could imagine a platform wanting
        a platform-wide minimum, say to > require SHA2-384 (when SHA2-256 is determined by the
        platform owner to be > insufficient). > Going further, what about per-variable digest
        minimums, if I use SHA2-384 as > the digest when I create the PK, I can later delete the PK
        using a SHA2-256 > digest algorithm, correct? Yes. Are you proposing to store the
        SignedDataHashAlgo and decide the minimum requirement based on this stored value on update.
        Do you think we can fork out this discussion in a separate bugzilla? > ============ > Just
        Sharing > ============ > EDK2 PyTools Library has some OS-independent Python for building
        and > manipulating many of these objects... >
        https://github.com/tianocore/edk2-pytool-library/blob/ >
        5b2dbd7b315743caa626c1a4657c642d491ea8c3/edk2toollib/uefi/ >
        authenticated_variables_structure_support.py Thanks for sharing. I will check out</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15792</commentid>
      <comment_count>17</comment_count>
      <who name="Jeremiah Cox">jerecox</who>
      <bug_when>2021-04-27 15:09:39 +0000</bug_when>
      <thetext>Regarding the spec, if there is any guidance on crypto algorithms (Required,
        Recommended, Deprecated, Obsolete, ...), I'd prefer that be single sourced in the
        documentation. Regarding MD5 and SHA1, perhaps they should be marked as Deprecated,
        Obsolete, or other. Regarding the code, instead of hardcoding this, can it be a PCD? An XDR
        that is iterated over? I guess this spec and code change could be a short-term bandage,
        simply to unblock use of SHA2-384 signature file digests... however someone (perhaps another
        bugzilla) should IMHO tackle crypto agility and floor enforcement. Obviously a new algorithm
        cannot be supported until code and tests are written and compiled in, but we have examples
        where Crypto is a standalone driver, to enable faster, modular updates (and save flash
        space). Thanks!</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>15826</commentid>
      <comment_count>18</comment_count>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2021-04-29 10:14:52 +0000</bug_when>
      <thetext>(In reply to Jeremiah Cox from comment #17) > Regarding the spec, if there is any
        guidance on crypto algorithms (Required, > Recommended, Deprecated, Obsolete, ...), I'd
        prefer that be single sourced > in the documentation. Regarding MD5 and SHA1, perhaps they
        should be marked > as Deprecated, Obsolete, or other. The proposed section represents hash
        algo by GUID and the sign will contain OID. I hope it doesn't create a confusion to the
        reader that the sign should contain an OID and not GUID. > Regarding the code, instead of
        hardcoding this, can it be a PCD? An XDR > that is iterated over? Are you looking to make it
        configurable from PCD? > I guess this spec and code change could be a short-term bandage,
        simply to > unblock use of SHA2-384 signature file digests... I wouldn't term it as a
        short-term bandage as there are 2 parts to the problem. a. Which digestAlgo to permit?
        Currently only SHA2-256 is permitted b. AuthVar update policy stating which allowed SHA2
        algo (from point a.) can now update AuthVar.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>16126</commentid>
      <comment_count>19</comment_count>
      <who name="">jiewen.yao</who>
      <bug_when>2021-05-24 02:54:14 +0000</bug_when>
      <thetext>I created a new https://bugzilla.tianocore.org/show_bug.cgi?id=3413 to describe
        general crypto agile support.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>16198</commentid>
      <comment_count>20</comment_count>
      <who name="Jeremiah Cox">jerecox</who>
      <bug_when>2021-05-27 17:37:42 +0000</bug_when>
      <thetext>Since Jiewen created the future looking BZ, we can address some of my
        scalability/agility feedback there... and let me say, enabling SHA-384/512 _is_ a good
        thing, but... Is there any way to programmatically detect if a platform has support for
        Authenticated vars with SHA-384/512 digests beyond calling SetVariable()? Will the status
        returned by SetVariable() aid troubleshooting if due to lack of SHA-384/512 support?
        EFI_SECURITY_VIOLATION is difficult to troubleshoot. Even if we invented a status like
        "EFI_UNSUPORTED_CRYPTO_ALG", I still wouldn't know which part of my signature, the file
        digest or the cert chain, had the incompatibility. We almost need a SetVariableEx() that
        returns a detailed error string... Further if I have to support systems, some without and
        some with this support, how do I practically do that? Can I add multiple signatures with
        different digest sizes? Or do I create 2 authenticated var *Data payloads, one with SHA-256,
        one with SHA-384 digest signatures? Either way, I'm not getting any value of SHA-384 unless
        my SHA-384 compatible systems require SHA-384, because now I have created SHA-256-signed
        payloads that are trusted by my new platforms. See, I could have "required" SHA-384 digests
        by never signing using a SHA-256 digest signature, but if I'm creating both, and there is no
        platform policy to require a minimum algorithm, then the only mechanism at my disposal is to
        use different certificates. In this design, a system on which I only want SHA-384 to be used
        must have certificates installed which I will only ever use with SHA-384 signature digests.
        Regarding the above paragraph, who are the customers? Are they okay with platforms that
        support SHA-384 and 512, but have no capability to require them? I'm going to invent a tag,
        open or resolved, to apply to my comments, apologies...</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>16386</commentid>
      <comment_count>21</comment_count>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2021-06-16 15:46:32 +0000</bug_when>
      <thetext>(In reply to Jeremiah Cox from comment #20) I agree that the developer experience is
        a problem to solve and not addressed with the proposal, however, it is also not the intent.
        > Is there any way to programmatically detect if a platform has support for > Authenticated
        vars with SHA-384/512 digests beyond calling SetVariable()? > Will the status returned by
        SetVariable() aid troubleshooting if due to lack > of SHA-384/512 support?
        EFI_SECURITY_VIOLATION is difficult to > troubleshoot. Even if we invented a status like >
        "EFI_UNSUPORTED_CRYPTO_ALG", I still wouldn't know which part of my > signature, the file
        digest or the cert chain, had the incompatibility. We > almost need a SetVariableEx() that
        returns a detailed error string... This is the RFC
        (https://edk2.groups.io/g/rfc/message/271) I logged when I just started with UEFI last year
        and initial stages of this work item. It took me a long time to figure out that Ubuntu tools
        are giving me an incompatible format with the current implementation in edk2. So, even
        without this patch, the problem exists as we don't have a mechanism to determine what is
        wrong with the AuthVar2. Later, I was able to talk to James (Bottomley) and got to know that
        edk2 uses a case of PKCS7 (RFC 2315). I meant to say that, we need to look at this problem
        holistically, and not only link with this proposal. > Further if I have to support systems,
        some without and some with this > support, how do I practically do that? Can I add multiple
        signatures with > different digest sizes? Or do I create 2 authenticated var *Data payloads,
        > one with SHA-256, one with SHA-384 digest signatures? Either way, I'm not > getting any
        value of SHA-384 unless my SHA-384 compatible systems require > SHA-384, because now I have
        created SHA-256-signed payloads that are trusted > by my new platforms. See, I could have
        "required" SHA-384 digests by never > signing using a SHA-256 digest signature, but if I'm
        creating both, and > there is no platform policy to require a minimum algorithm, then the
        only > mechanism at my disposal is to use different certificates. In this design, > a system
        on which I only want SHA-384 to be used must have certificates > installed which I will only
        ever use with SHA-384 signature digests. I think we talked about this in your earlier
        comment. If we link this proposal with the policy problem, then a careful system implementer
        won't be able to use SHA-384 signature digests. Also, let's assume that policy problem is
        fixed. I believe this proposal still has to go in. > Regarding the above paragraph, who are
        the customers? Are they okay with > platforms that support SHA-384 and 512, but have no
        capability to require > them? We wanted to be pre-emptive and enable the option to support a
        stronger crypto.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>16863</commentid>
      <comment_count>22</comment_count>
      <who name="Divneil Wadhawan">divneil.r.wadhawan</who>
      <bug_when>2021-08-10 13:43:58 +0000</bug_when>
      <thetext>Jeremiah, I wanted to check if all is good to go ahead with this patch for now?</thetext>
    </long_desc>
    <attachment isobsolete="0" ispatch="1" isprivate="0">
      <attachid>555</attachid>
      <date>2020-09-21 13:41:37 +0000</date>
      <delta_ts>2020-09-21 13:41:37 +0000</delta_ts>
      <desc>efitools to sign with multiple digest algorithms</desc>
      <filename>0001-sign-efi-sig-list-add-support-of-multiple-SHA-algos-.patch</filename>
      <type>text/plain</type>
      <size>4367</size>
      <attacher name="Divneil Wadhawan">divneil.r.wadhawan</attacher>
    </attachment>
    <attachment isobsolete="1" ispatch="0" isprivate="0">
      <attachid>556</attachid>
      <date>2020-09-21 13:43:03 +0000</date>
      <delta_ts>2020-12-10 01:50:33 +0000</delta_ts>
      <desc>Convert Binary file to array - Used here for .auth to .h conversion</desc>
      <filename>file_to_array.c</filename>
      <type>text/plain</type>
      <size>3644</size>
      <attacher name="Divneil Wadhawan">divneil.r.wadhawan</attacher>
    </attachment>
    <attachment isobsolete="1" ispatch="0" isprivate="0">
      <attachid>557</attachid>
      <date>2020-09-21 13:45:13 +0000</date>
      <delta_ts>2020-12-10 01:52:15 +0000</delta_ts>
      <desc>Script to generate Auth Variables with a user specified combination of RSAxxxx/SHAyyy</desc>
      <filename>gen_auth_var.sh</filename>
      <type>text/x-sh</type>
      <size>4103</size>
      <attacher name="Divneil Wadhawan">divneil.r.wadhawan</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>608</attachid>
      <date>2020-12-10 01:50:33 +0000</date>
      <delta_ts>2020-12-10 01:50:33 +0000</delta_ts>
      <desc>Convert .auth file to .c file for direct usage in edk2 code</desc>
      <filename>bin2arr.c</filename>
      <type>text/plain</type>
      <size>4568</size>
      <attacher name="Divneil Wadhawan">divneil.r.wadhawan</attacher>
    </attachment>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>609</attachid>
      <date>2020-12-10 01:52:15 +0000</date>
      <delta_ts>2020-12-10 01:52:15 +0000</delta_ts>
      <desc>Script to generate Auth Variables with a user specified combination of RSAxxxx/SHAyyy</desc>
      <filename>gen_auth_var.sh</filename>
      <type>text/x-sh</type>
      <size>4246</size>
      <attacher name="Divneil Wadhawan">divneil.r.wadhawan</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>3951</bug_id>
    <creation_ts>2022-06-16 13:54:58 +0000</creation_ts>
    <short_desc>Add Support for HTTPS Proxy Server for HTTP Boot</short_desc>
    <delta_ts>2023-06-15 17:00:53 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Reference Implementation</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>IN_PROGRESS</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Saloni Kasbekar">saloni.kasbekar</reporter>
    <assigned_to name="Saloni Kasbekar">saloni.kasbekar</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cc>saloni.kasbekar</cc>
    <cf_industrystandardspecifications>UEFI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_release_observed>EDK II Master</cf_release_observed>
    <cf_target_os>---</cf_target_os>
    <cf_package>NetworkPkg</cf_package>
    <cf_releases_to_fix>EDK II Master</cf_releases_to_fix>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>19087</commentid>
      <comment_count>0</comment_count>
      <who name="Saloni Kasbekar">saloni.kasbekar</who>
      <bug_when>2022-06-16 13:54:58 +0000</bug_when>
      <thetext>Need to add support for CONNECT HTTP command in order to create a tunnel from HTTPS
        Proxy Server to EndPoint Server. Also add support to connect through proxy server using a
        DevicePath sent to the Boot Manager.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>19088</commentid>
      <comment_count>1</comment_count>
      <who name="Saloni Kasbekar">saloni.kasbekar</who>
      <bug_when>2022-06-16 15:17:08 +0000</bug_when>
      <thetext>Moving status to confirmed.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>19121</commentid>
      <comment_count>2</comment_count>
      <attachid>996</attachid>
      <who name="Saloni Kasbekar">saloni.kasbekar</who>
      <bug_when>2022-06-22 19:02:07 +0000</bug_when>
      <thetext>Created attachment 996 Code Review Patch Code patch changes sent for review.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>19122</commentid>
      <comment_count>3</comment_count>
      <who name="Saloni Kasbekar">saloni.kasbekar</who>
      <bug_when>2022-06-22 19:02:38 +0000</bug_when>
      <thetext>Move status to in_progress</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>19578</commentid>
      <comment_count>4</comment_count>
      <who name="Saloni Kasbekar">saloni.kasbekar</who>
      <bug_when>2022-09-15 15:21:43 +0000</bug_when>
      <thetext>Change Product to Edk2 Code First. Accompanying spec change is at
        https://bugzilla.tianocore.org/show_bug.cgi?id=4052</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>21666</commentid>
      <comment_count>5</comment_count>
      <who name="Saloni Kasbekar">saloni.kasbekar</who>
      <bug_when>2023-06-15 16:55:31 +0000</bug_when>
      <thetext>*** Bug 4043 has been marked as a duplicate of this bug. ***</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>21668</commentid>
      <comment_count>6</comment_count>
      <who name="Saloni Kasbekar">saloni.kasbekar</who>
      <bug_when>2023-06-15 16:57:21 +0000</bug_when>
      <thetext>Changes are currently implemented in edk2-staging/HttpProxy branch.</thetext>
    </long_desc>
    <attachment isobsolete="0" ispatch="1" isprivate="0">
      <attachid>996</attachid>
      <date>2022-06-22 19:02:07 +0000</date>
      <delta_ts>2022-06-22 19:02:07 +0000</delta_ts>
      <desc>Code Review Patch</desc>
      <filename>0001-NetworkPkg-HttpBootDxe-Add-Support-for-HTTPS-Proxy-S.patch</filename>
      <type>text/plain</type>
      <size>19639</size>
      <attacher name="Saloni Kasbekar">saloni.kasbekar</attacher>
    </attachment>
  </bug>
  <bug>
    <bug_id>4865</bug_id>
    <creation_ts>2024-10-09 11:05:42 +0000</creation_ts>
    <short_desc>Fix Battery and Power Meter Device for HW Reduced ACPI</short_desc>
    <delta_ts>2024-10-09 11:14:59 +0000</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>1</classification_id>
    <classification>Unclassified</classification>
    <product>EDK2 Code First</product>
    <component>Specification Update</component>
    <version>Current</version>
    <rep_platform>All</rep_platform>
    <op_sys>All</op_sys>
    <bug_status>IN_PROGRESS</bug_status>
    <resolution />
    <bug_file_loc />
    <status_whiteboard />
    <keywords />
    <priority>Lowest</priority>
    <bug_severity>normal</bug_severity>
    <target_milestone>---</target_milestone>
    <everconfirmed>1</everconfirmed>
    <reporter name="Souvik Chakravarty">Souvik.Chakravarty</reporter>
    <assigned_to name="unassigned">unassigned</assigned_to>
    <cc>edk2+bugs+int+994+563148131503455288</cc>
    <cf_industrystandardspecifications>ACPI Specification</cf_industrystandardspecifications>
    <cf_branch />
    <cf_target_os>---</cf_target_os>
    <comment_sort_order>oldest_to_newest</comment_sort_order>
    <long_desc isprivate="0">
      <commentid>23443</commentid>
      <comment_count>0</comment_count>
      <attachid>1547</attachid>
      <who name="Souvik Chakravarty">Souvik.Chakravarty</who>
      <bug_when>2024-10-09 11:05:42 +0000</bug_when>
      <thetext>Created attachment 1547 ECR - Fix Battery and Power Meter Device for HW Reduced ACPI
        This ECR proposes to clarify some of the language in "Chapter 10 POWER SOURCE AND POWER
        METER DEVICES" to make it more generic, to indicate it supports HW Reduced ACPI platforms as
        well.</thetext>
    </long_desc>
    <long_desc isprivate="0">
      <commentid>23444</commentid>
      <comment_count>1</comment_count>
      <who name="Souvik Chakravarty">Souvik.Chakravarty</who>
      <bug_when>2024-10-09 11:14:59 +0000</bug_when>
      <thetext>ASWG ECR: https://mantis.uefi.org/mantis/view.php?id=2484</thetext>
    </long_desc>
    <attachment isobsolete="0" ispatch="0" isprivate="0">
      <attachid>1547</attachid>
      <date>2024-10-09 11:05:42 +0000</date>
      <delta_ts>2024-10-09 11:05:42 +0000</delta_ts>
      <desc>ECR - Fix Battery and Power Meter Device for HW Reduced ACPI</desc>
      <filename>CodeFirst_ACPI_Fix_PowerMeter_Battery_HWReduced.docx</filename>
      <type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</type>
      <size>26200</size>
      <attacher name="Souvik Chakravarty">Souvik.Chakravarty</attacher>
    </attachment>
  </bug>
</bugzilla>